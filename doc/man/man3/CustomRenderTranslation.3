.TH "CustomRenderTranslation" 3 "Thu Jun 14 2018" "afd" \" -*- nroff -*-
.ad l
.nh
.SH NAME
CustomRenderTranslation \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <renderTransform\&.h>\fP
.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBRenderTransformation\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "void \fBsetRenderTransformation\fP (\fBRenderTransformation\fP &_obj)"
.br
.ti -1c
.RI "\fBRenderTransformation\fP \fBgetRenderTransformation\fP ()"
.br
.ti -1c
.RI "void \fBsetScale\fP (glm::vec3 &_scale)"
.br
.ti -1c
.RI "void \fBsetScaleX\fP (float &fval)"
.br
.ti -1c
.RI "void \fBsetScaleY\fP (float &fval)"
.br
.ti -1c
.RI "void \fBsetScaleZ\fP (float &fval)"
.br
.ti -1c
.RI "void \fBsetRotation\fP (glm::vec3 &_rotation)"
.br
.ti -1c
.RI "void \fBsetRotationX\fP (float &_fval)"
.br
.ti -1c
.RI "void \fBsetRotationY\fP (float &_fval)"
.br
.ti -1c
.RI "void \fBsetRotationZ\fP (float &_fval)"
.br
.ti -1c
.RI "void \fBsetTranslation\fP (glm::vec3 &_translation)"
.br
.ti -1c
.RI "void \fBsetTranslationX\fP (float &_fval)"
.br
.ti -1c
.RI "void \fBsetTranslationY\fP (float &_fval)"
.br
.ti -1c
.RI "void \fBsetTranslationZ\fP (float &_fval)"
.br
.ti -1c
.RI "glm::vec3 \fBgetScale\fP ()"
.br
.ti -1c
.RI "float \fBgetScaleX\fP ()"
.br
.ti -1c
.RI "float \fBgetScaleY\fP ()"
.br
.ti -1c
.RI "float \fBgetScaleZ\fP ()"
.br
.ti -1c
.RI "glm::vec3 \fBgetRotation\fP ()"
.br
.ti -1c
.RI "float \fBgetRotationX\fP ()"
.br
.ti -1c
.RI "float \fBgetRotationY\fP ()"
.br
.ti -1c
.RI "float \fBgetRotationZ\fP ()"
.br
.ti -1c
.RI "glm::vec3 \fBgetTraslation\fP ()"
.br
.ti -1c
.RI "float \fBgetTranslationX\fP ()"
.br
.ti -1c
.RI "float \fBgetTranslationY\fP ()"
.br
.ti -1c
.RI "float \fBgetTranslationZ\fP ()"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "\fBRenderTransformation\fP \fBm_nRenderTransformationObj\fP"
.br
.in -1c
.SH "Member Function Documentation"
.PP 
.SS "\fBRenderTransformation\fP CustomRenderTranslation::getRenderTransformation ()\fC [inline]\fP"

.SS "glm::vec3 CustomRenderTranslation::getRotation ()\fC [inline]\fP"

.SS "float CustomRenderTranslation::getRotationX ()\fC [inline]\fP"

.SS "float CustomRenderTranslation::getRotationY ()\fC [inline]\fP"

.SS "float CustomRenderTranslation::getRotationZ ()\fC [inline]\fP"

.SS "glm::vec3 CustomRenderTranslation::getScale ()\fC [inline]\fP"

.SS "float CustomRenderTranslation::getScaleX ()\fC [inline]\fP"

.SS "float CustomRenderTranslation::getScaleY ()\fC [inline]\fP"

.SS "float CustomRenderTranslation::getScaleZ ()\fC [inline]\fP"

.SS "float CustomRenderTranslation::getTranslationX ()\fC [inline]\fP"

.SS "float CustomRenderTranslation::getTranslationY ()\fC [inline]\fP"

.SS "float CustomRenderTranslation::getTranslationZ ()\fC [inline]\fP"

.SS "glm::vec3 CustomRenderTranslation::getTraslation ()\fC [inline]\fP"

.SS "void CustomRenderTranslation::setRenderTransformation (\fBRenderTransformation\fP & _obj)\fC [inline]\fP"

.SS "void CustomRenderTranslation::setRotation (glm::vec3 & _rotation)\fC [inline]\fP"

.SS "void CustomRenderTranslation::setRotationX (float & _fval)\fC [inline]\fP"

.SS "void CustomRenderTranslation::setRotationY (float & _fval)\fC [inline]\fP"

.SS "void CustomRenderTranslation::setRotationZ (float & _fval)\fC [inline]\fP"

.SS "void CustomRenderTranslation::setScale (glm::vec3 & _scale)\fC [inline]\fP"

.SS "void CustomRenderTranslation::setScaleX (float & fval)\fC [inline]\fP"

.SS "void CustomRenderTranslation::setScaleY (float & fval)\fC [inline]\fP"

.SS "void CustomRenderTranslation::setScaleZ (float & fval)\fC [inline]\fP"

.SS "void CustomRenderTranslation::setTranslation (glm::vec3 & _translation)\fC [inline]\fP"

.SS "void CustomRenderTranslation::setTranslationX (float & _fval)\fC [inline]\fP"

.SS "void CustomRenderTranslation::setTranslationY (float & _fval)\fC [inline]\fP"

.SS "void CustomRenderTranslation::setTranslationZ (float & _fval)\fC [inline]\fP"

.SH "Member Data Documentation"
.PP 
.SS "\fBRenderTransformation\fP CustomRenderTranslation::m_nRenderTransformationObj\fC [private]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for afd from the source code\&.
