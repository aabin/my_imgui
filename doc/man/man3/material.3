.TH "material" 3 "Thu Jun 14 2018" "afd" \" -*- nroff -*-
.ad l
.nh
.SH NAME
material \- is instance of the shader 
.br
description:  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <material\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBmaterial\fP ()"
.br
.ti -1c
.RI "\fBmaterial\fP (shared_ptr< \fBaf_shader\fP > psd)"
.br
.ti -1c
.RI "void \fBset_pshader\fP (shared_ptr< \fBaf_shader\fP > psd)"
.br
.ti -1c
.RI "shared_ptr< \fBaf_shader\fP > & \fBget_shader\fP ()"
.br
.ti -1c
.RI "void \fBset_name\fP (string nm)"
.br
.ti -1c
.RI "string \fBget_name\fP ()"
.br
.ti -1c
.RI "\fBmp_shader_uf\fP & \fBget_mp_sd_uf\fP ()"
.br
.ti -1c
.RI "void \fBuse\fP ()"
.br
.RI "\fIwhen a material is used, the shader referenced is used 
.br
\fP"
.ti -1c
.RI "void \fBset_value\fP (string unf_name, float *pfvalue, GLuint len)"
.br
.ti -1c
.RI "void \fBset_value\fP (string unf_name, int *pivalue, GLuint len)"
.br
.ti -1c
.RI "void \fBset_value\fP (string unf_name, unsigned int *puivalue, GLuint len)"
.br
.ti -1c
.RI "void \fBset_value\fP (string unf_name, double *pdvalue, GLuint len)"
.br
.ti -1c
.RI "void \fBedit_ufs\fP ()"
.br
.ti -1c
.RI "void \fBoutput_2_json\fP (Value &jvalue)"
.br
.ti -1c
.RI "void \fBinit_from_json\fP (Value &jvalue)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "bool \fB_sel\fP { false }"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "shared_ptr< \fBaf_shader\fP > \fB_pshader\fP"
.br
.ti -1c
.RI "\fBmp_shader_uf\fP \fB_mp_shader_uf\fP"
.br
.ti -1c
.RI "string \fB_name\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
is instance of the shader 
.br
description: 


.IP "\(bu" 2
a material contain a variable list which is correspond to the shader variable type of the shader referenced by the material 
.PP

.SH "Constructor & Destructor Documentation"
.PP 
.SS "material::material ()\fC [inline]\fP"

.SS "material::material (shared_ptr< \fBaf_shader\fP > psd)"

.SH "Member Function Documentation"
.PP 
.SS "void material::edit_ufs ()"

.SS "\fBmp_shader_uf\fP& material::get_mp_sd_uf ()\fC [inline]\fP"

.SS "string material::get_name ()\fC [inline]\fP"

.SS "shared_ptr<\fBaf_shader\fP>& material::get_shader ()\fC [inline]\fP"

.SS "void material::init_from_json (Value & jvalue)"

.SS "void material::output_2_json (Value & jvalue)"

.SS "void material::set_name (string nm)\fC [inline]\fP"

.SS "void material::set_pshader (shared_ptr< \fBaf_shader\fP > psd)\fC [inline]\fP"

.SS "void material::set_value (string unf_name, float * pfvalue, GLuint len)"

.SS "void material::set_value (string unf_name, int * pivalue, GLuint len)"

.SS "void material::set_value (string unf_name, unsigned int * puivalue, GLuint len)"

.SS "void material::set_value (string unf_name, double * pdvalue, GLuint len)"

.SS "void material::use ()"

.PP
when a material is used, the shader referenced is used 
.br

.SH "Member Data Documentation"
.PP 
.SS "\fBmp_shader_uf\fP material::_mp_shader_uf\fC [private]\fP"

.SS "string material::_name\fC [private]\fP"

.SS "shared_ptr<\fBaf_shader\fP> material::_pshader\fC [private]\fP"

.SS "bool material::_sel { false }"


.SH "Author"
.PP 
Generated automatically by Doxygen for afd from the source code\&.
