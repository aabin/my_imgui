<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9">
  <compounddef id="af__shader_8cpp" kind="file" language="C++">
    <compoundname>af_shader.cpp</compoundname>
    <includes refid="af__shader_8h" local="yes">af_shader.h</includes>
    <incdepgraph>
      <node id="8">
        <label>glm/gtx/norm.hpp</label>
      </node>
      <node id="0">
        <label>G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/af_shader.cpp</label>
        <link refid="af_shader.cpp"/>
        <childnode refid="1" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>functional</label>
      </node>
      <node id="1">
        <label>af_shader.h</label>
        <link refid="af__shader_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>map</label>
      </node>
      <node id="7">
        <label>gtc/type_ptr.hpp</label>
      </node>
      <node id="6">
        <label>gtc/matrix_transform.hpp</label>
      </node>
      <node id="10">
        <label>fab.h</label>
      </node>
      <node id="2">
        <label>vector</label>
      </node>
      <node id="5">
        <label>glm.hpp</label>
      </node>
      <node id="9">
        <label>GL/gl3w.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structvtype__size" prot="public">vtype_size</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="af__shader_8cpp_1aae244ce383ac3b24153e9405df275999" prot="public" static="no" mutable="no">
        <type>map&lt; GLenum, <ref refid="structvtype__size" kindref="compound">vtype_size</ref> &gt;</type>
        <definition>map&lt; GLenum, vtype_size&gt; shader_variable_type_size</definition>
        <argsstring></argsstring>
        <name>shader_variable_type_size</name>
        <initializer>= 
{
	{ GL_FLOAT, { sizeof(float), 1 } }, { GL_FLOAT_VEC2, { sizeof(float), 2 } }, { GL_FLOAT_VEC3, { sizeof(float), 3 } }, { GL_FLOAT_VEC3, { sizeof(float), 3 } }, { GL_FLOAT_VEC4, { sizeof(float), 4 } }, 
	{ GL_DOUBLE,{ sizeof(double), 1} }, { GL_DOUBLE_VEC2, { sizeof(double), 2 } }, { GL_DOUBLE_VEC3, { sizeof(double), 3 } }, { GL_DOUBLE_VEC3, { sizeof(double), 3 } }, { GL_DOUBLE_VEC4, { sizeof(double), 4 } }, 
	{ GL_INT, { sizeof(int), 1 }}, { GL_INT_VEC2, { sizeof(int), 2 } }, { GL_INT_VEC3, { sizeof(int), 3 } }, { GL_INT_VEC3, { sizeof(int), 3 } }, { GL_INT_VEC4, { sizeof(int), 4 } }, 
	{ GL_UNSIGNED_INT, { sizeof(unsigned int), 1 } }, { GL_UNSIGNED_INT_VEC2, { sizeof(unsigned int), 2 } }, { GL_UNSIGNED_INT_VEC3, { sizeof(unsigned int), 3 } }, { GL_UNSIGNED_INT_VEC3, { sizeof(unsigned int), 3 } }, { GL_UNSIGNED_INT_VEC4, { sizeof(unsigned int), 4 } }, 
	{ GL_BOOL, { sizeof(bool), 1 }}, { GL_BOOL_VEC2, { sizeof(bool), 2 } }, { GL_BOOL_VEC3, { sizeof(bool), 3 } }, { GL_BOOL_VEC4, { sizeof(bool), 4 } }, 
	{ GL_FLOAT_MAT2, {sizeof(float), 2 * 2 } }, { GL_FLOAT_MAT3, { sizeof(float), 3 * 3 } }, { GL_FLOAT_MAT4, { sizeof(float), 4 * 4 } }, 
	{ GL_FLOAT_MAT2x3, { sizeof(float), 2 * 3 } }, { GL_FLOAT_MAT2x4, { sizeof(float), 2 * 4 } }, { GL_FLOAT_MAT3x2, { sizeof(float), 3 * 2 } }, 
	{ GL_FLOAT_MAT3x4, { sizeof(float), 3 * 4 } }, { GL_FLOAT_MAT4x2, { sizeof(float), 4 * 2 } }, { GL_FLOAT_MAT4x3, { sizeof(float), 4 * 3 } }, 
	{ GL_DOUBLE_MAT2, { sizeof(double), 2 * 2 }}, { GL_DOUBLE_MAT3, { sizeof(double), 3 * 3 } }, { GL_DOUBLE_MAT4, { sizeof(double), 4 * 4 } }, 
	{ GL_DOUBLE_MAT2x3,{ sizeof(double), 2 * 3 }}, { GL_DOUBLE_MAT2x4, { sizeof(double), 2 * 4 } }, { GL_DOUBLE_MAT3x2, { sizeof(double), 3 * 2 } }, 
	{ GL_DOUBLE_MAT3x4, { sizeof(double), 3 * 4 } }, { GL_DOUBLE_MAT4x2, { sizeof(double), 4 * 2 } }, { GL_DOUBLE_MAT4x3, { sizeof(double), 4 * 3 } },
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/af_shader.cpp" line="9" column="1" bodyfile="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/af_shader.cpp" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="af__shader_8cpp_1af0ab9139334e7f9f0886c7af66dd1d7c" prot="public" static="no" mutable="no">
        <type><ref refid="af__shader_8h_1a273fa95b39fcbc29f4c0ee1ddf408912" kindref="member">maf_shader</ref></type>
        <definition>maf_shader g_af_shader_list</definition>
        <argsstring></argsstring>
        <name>g_af_shader_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/af_shader.cpp" line="470" column="1" bodyfile="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/af_shader.cpp" bodystart="470" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="af__shader_8h" kindref="compound">af_shader.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3" refid="structvtype__size" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvtype__size" kindref="compound">vtype_size</ref><sp/></highlight></codeline>
<codeline lineno="4"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structvtype__size_1aed0f0b88c5ec3931bde9f3dd6b44aae8" kindref="member">_utsize</ref>,<ref refid="structvtype__size_1aa46504e6ed8a0401fb0553bcd4f5b7d3" kindref="member">_cnt</ref>;<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structvtype__size_1a37634a44decd943042c1ee9d1c442914" kindref="member">vtype_size</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>us,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ct)<sp/>:<ref refid="structvtype__size_1aed0f0b88c5ec3931bde9f3dd6b44aae8" kindref="member">_utsize</ref>(us),<ref refid="structvtype__size_1aa46504e6ed8a0401fb0553bcd4f5b7d3" kindref="member">_cnt</ref>(ct){}</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structvtype__size_1a37634a44decd943042c1ee9d1c442914" kindref="member">vtype_size</ref>()<sp/>:<ref refid="structvtype__size_1aed0f0b88c5ec3931bde9f3dd6b44aae8" kindref="member">_utsize</ref>(0),<sp/><ref refid="structvtype__size_1aa46504e6ed8a0401fb0553bcd4f5b7d3" kindref="member">_cnt</ref>(0){}</highlight></codeline>
<codeline lineno="8"><highlight class="normal">};</highlight></codeline>
<codeline lineno="9"><highlight class="normal">map<sp/>&lt;<sp/>GLenum,<sp/>vtype_size&gt;<sp/><ref refid="af__shader_8cpp_1aae244ce383ac3b24153e9405df275999" kindref="member">shader_variable_type_size</ref><sp/>=<sp/></highlight></codeline>
<codeline lineno="10"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>GL_FLOAT,<sp/>{<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(float),<sp/>1<sp/>}<sp/>},<sp/>{<sp/>GL_FLOAT_VEC2,<sp/>{<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(float),<sp/>2<sp/>}<sp/>},<sp/>{<sp/>GL_FLOAT_VEC3,<sp/>{<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(float),<sp/>3<sp/>}<sp/>},<sp/>{<sp/>GL_FLOAT_VEC3,<sp/>{<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(float),<sp/>3<sp/>}<sp/>},<sp/>{<sp/>GL_FLOAT_VEC4,<sp/>{<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(float),<sp/>4<sp/>}<sp/>},<sp/>\</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>GL_DOUBLE,{<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(double),<sp/>1}<sp/>},<sp/>{<sp/>GL_DOUBLE_VEC2,<sp/>{<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(double),<sp/>2<sp/>}<sp/>},<sp/>{<sp/>GL_DOUBLE_VEC3,<sp/>{<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(double),<sp/>3<sp/>}<sp/>},<sp/>{<sp/>GL_DOUBLE_VEC3,<sp/>{<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(double),<sp/>3<sp/>}<sp/>},<sp/>{<sp/>GL_DOUBLE_VEC4,<sp/>{<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(double),<sp/>4<sp/>}<sp/>},<sp/>\</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>GL_INT,<sp/>{<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int),<sp/>1<sp/>}},<sp/>{<sp/>GL_INT_VEC2,<sp/>{<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int),<sp/>2<sp/>}<sp/>},<sp/>{<sp/>GL_INT_VEC3,<sp/>{<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int),<sp/>3<sp/>}<sp/>},<sp/>{<sp/>GL_INT_VEC3,<sp/>{<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int),<sp/>3<sp/>}<sp/>},<sp/>{<sp/>GL_INT_VEC4,<sp/>{<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int),<sp/>4<sp/>}<sp/>},<sp/>\</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>GL_UNSIGNED_INT,<sp/>{<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int),<sp/>1<sp/>}<sp/>},<sp/>{<sp/>GL_UNSIGNED_INT_VEC2,<sp/>{<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int),<sp/>2<sp/>}<sp/>},<sp/>{<sp/>GL_UNSIGNED_INT_VEC3,<sp/>{<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int),<sp/>3<sp/>}<sp/>},<sp/>{<sp/>GL_UNSIGNED_INT_VEC3,<sp/>{<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int),<sp/>3<sp/>}<sp/>},<sp/>{<sp/>GL_UNSIGNED_INT_VEC4,<sp/>{<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int),<sp/>4<sp/>}<sp/>},<sp/>\</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>GL_BOOL,<sp/>{<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(bool),<sp/>1<sp/>}},<sp/>{<sp/>GL_BOOL_VEC2,<sp/>{<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(bool),<sp/>2<sp/>}<sp/>},<sp/>{<sp/>GL_BOOL_VEC3,<sp/>{<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(bool),<sp/>3<sp/>}<sp/>},<sp/>{<sp/>GL_BOOL_VEC4,<sp/>{<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(bool),<sp/>4<sp/>}<sp/>},<sp/>\</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>GL_FLOAT_MAT2,<sp/>{</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(float),<sp/>2<sp/>*<sp/>2<sp/>}<sp/>},<sp/>{<sp/>GL_FLOAT_MAT3,<sp/>{<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(float),<sp/>3<sp/>*<sp/>3<sp/>}<sp/>},<sp/>{<sp/>GL_FLOAT_MAT4,<sp/>{<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(float),<sp/>4<sp/>*<sp/>4<sp/>}<sp/>},<sp/>\</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>GL_FLOAT_MAT2x3,<sp/>{<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(float),<sp/>2<sp/>*<sp/>3<sp/>}<sp/>},<sp/>{<sp/>GL_FLOAT_MAT2x4,<sp/>{<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(float),<sp/>2<sp/>*<sp/>4<sp/>}<sp/>},<sp/>{<sp/>GL_FLOAT_MAT3x2,<sp/>{<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(float),<sp/>3<sp/>*<sp/>2<sp/>}<sp/>},<sp/>\</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>GL_FLOAT_MAT3x4,<sp/>{<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(float),<sp/>3<sp/>*<sp/>4<sp/>}<sp/>},<sp/>{<sp/>GL_FLOAT_MAT4x2,<sp/>{<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(float),<sp/>4<sp/>*<sp/>2<sp/>}<sp/>},<sp/>{<sp/>GL_FLOAT_MAT4x3,<sp/>{<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(float),<sp/>4<sp/>*<sp/>3<sp/>}<sp/>},<sp/>\</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>GL_DOUBLE_MAT2,<sp/>{<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(double),<sp/>2<sp/>*<sp/>2<sp/>}},<sp/>{<sp/>GL_DOUBLE_MAT3,<sp/>{<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(double),<sp/>3<sp/>*<sp/>3<sp/>}<sp/>},<sp/>{<sp/>GL_DOUBLE_MAT4,<sp/>{<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(double),<sp/>4<sp/>*<sp/>4<sp/>}<sp/>},<sp/>\</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>GL_DOUBLE_MAT2x3,{<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(double),<sp/>2<sp/>*<sp/>3<sp/>}},<sp/>{<sp/>GL_DOUBLE_MAT2x4,<sp/>{<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(double),<sp/>2<sp/>*<sp/>4<sp/>}<sp/>},<sp/>{<sp/>GL_DOUBLE_MAT3x2,<sp/>{<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(double),<sp/>3<sp/>*<sp/>2<sp/>}<sp/>},<sp/>\</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>GL_DOUBLE_MAT3x4,<sp/>{<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(double),<sp/>3<sp/>*<sp/>4<sp/>}<sp/>},<sp/>{<sp/>GL_DOUBLE_MAT4x2,<sp/>{<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(double),<sp/>4<sp/>*<sp/>2<sp/>}<sp/>},<sp/>{<sp/>GL_DOUBLE_MAT4x3,<sp/>{<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(double),<sp/>4<sp/>*<sp/>3<sp/>}<sp/>},</highlight></codeline>
<codeline lineno="22"><highlight class="normal">};</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="24"><highlight class="comment">GL_SAMPLER_1D<sp/><sp/><sp/>sampler1D</highlight></codeline>
<codeline lineno="25"><highlight class="comment">GL_SAMPLER_2D<sp/><sp/><sp/>sampler2D</highlight></codeline>
<codeline lineno="26"><highlight class="comment">GL_SAMPLER_3D<sp/><sp/><sp/>sampler3D</highlight></codeline>
<codeline lineno="27"><highlight class="comment">GL_SAMPLER_CUBE<sp/>samplerCube</highlight></codeline>
<codeline lineno="28"><highlight class="comment">GL_SAMPLER_1D_SHADOW<sp/><sp/><sp/><sp/>sampler1DShadow</highlight></codeline>
<codeline lineno="29"><highlight class="comment">GL_SAMPLER_2D_SHADOW<sp/><sp/><sp/><sp/>sampler2DShadow</highlight></codeline>
<codeline lineno="30"><highlight class="comment">GL_SAMPLER_1D_ARRAY<sp/>sampler1DArray</highlight></codeline>
<codeline lineno="31"><highlight class="comment">GL_SAMPLER_2D_ARRAY<sp/>sampler2DArray</highlight></codeline>
<codeline lineno="32"><highlight class="comment">GL_SAMPLER_1D_ARRAY_SHADOW<sp/><sp/>sampler1DArrayShadow</highlight></codeline>
<codeline lineno="33"><highlight class="comment">GL_SAMPLER_2D_ARRAY_SHADOW<sp/><sp/>sampler2DArrayShadow</highlight></codeline>
<codeline lineno="34"><highlight class="comment">GL_SAMPLER_2D_MULTISAMPLE<sp/><sp/><sp/>sampler2DMS</highlight></codeline>
<codeline lineno="35"><highlight class="comment">GL_SAMPLER_2D_MULTISAMPLE_ARRAY<sp/>sampler2DMSArray</highlight></codeline>
<codeline lineno="36"><highlight class="comment">GL_SAMPLER_CUBE_SHADOW<sp/><sp/>samplerCubeShadow</highlight></codeline>
<codeline lineno="37"><highlight class="comment">GL_SAMPLER_BUFFER<sp/><sp/><sp/>samplerBuffer</highlight></codeline>
<codeline lineno="38"><highlight class="comment">GL_SAMPLER_2D_RECT<sp/><sp/>sampler2DRect</highlight></codeline>
<codeline lineno="39"><highlight class="comment">GL_SAMPLER_2D_RECT_SHADOW<sp/><sp/><sp/>sampler2DRectShadow</highlight></codeline>
<codeline lineno="40"><highlight class="comment">GL_INT_SAMPLER_1D<sp/><sp/><sp/>isampler1D</highlight></codeline>
<codeline lineno="41"><highlight class="comment">GL_INT_SAMPLER_2D<sp/><sp/><sp/>isampler2D</highlight></codeline>
<codeline lineno="42"><highlight class="comment">GL_INT_SAMPLER_3D<sp/><sp/><sp/>isampler3D</highlight></codeline>
<codeline lineno="43"><highlight class="comment">GL_INT_SAMPLER_CUBE<sp/>isamplerCube</highlight></codeline>
<codeline lineno="44"><highlight class="comment">GL_INT_SAMPLER_1D_ARRAY<sp/>isampler1DArray</highlight></codeline>
<codeline lineno="45"><highlight class="comment">GL_INT_SAMPLER_2D_ARRAY<sp/>isampler2DArray</highlight></codeline>
<codeline lineno="46"><highlight class="comment">GL_INT_SAMPLER_2D_MULTISAMPLE<sp/><sp/><sp/>isampler2DMS</highlight></codeline>
<codeline lineno="47"><highlight class="comment">GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY<sp/>isampler2DMSArray</highlight></codeline>
<codeline lineno="48"><highlight class="comment">GL_INT_SAMPLER_BUFFER<sp/><sp/><sp/>isamplerBuffer</highlight></codeline>
<codeline lineno="49"><highlight class="comment">GL_INT_SAMPLER_2D_RECT<sp/><sp/>isampler2DRect</highlight></codeline>
<codeline lineno="50"><highlight class="comment">GL_UNSIGNED_INT_SAMPLER_1D<sp/><sp/>usampler1D</highlight></codeline>
<codeline lineno="51"><highlight class="comment">GL_UNSIGNED_INT_SAMPLER_2D<sp/><sp/>usampler2D</highlight></codeline>
<codeline lineno="52"><highlight class="comment">GL_UNSIGNED_INT_SAMPLER_3D<sp/><sp/>usampler3D</highlight></codeline>
<codeline lineno="53"><highlight class="comment">GL_UNSIGNED_INT_SAMPLER_CUBE<sp/><sp/><sp/><sp/>usamplerCube</highlight></codeline>
<codeline lineno="54"><highlight class="comment">GL_UNSIGNED_INT_SAMPLER_1D_ARRAY<sp/><sp/><sp/><sp/>usampler2DArray</highlight></codeline>
<codeline lineno="55"><highlight class="comment">GL_UNSIGNED_INT_SAMPLER_2D_ARRAY<sp/><sp/><sp/><sp/>usampler2DArray</highlight></codeline>
<codeline lineno="56"><highlight class="comment">GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE<sp/><sp/>usampler2DMS</highlight></codeline>
<codeline lineno="57"><highlight class="comment">GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY<sp/><sp/><sp/><sp/>usampler2DMSArray</highlight></codeline>
<codeline lineno="58"><highlight class="comment">GL_UNSIGNED_INT_SAMPLER_BUFFER<sp/><sp/>usamplerBuffer</highlight></codeline>
<codeline lineno="59"><highlight class="comment">GL_UNSIGNED_INT_SAMPLER_2D_RECT<sp/>usampler2DRect</highlight></codeline>
<codeline lineno="60"><highlight class="comment">GL_IMAGE_1D<sp/>image1D</highlight></codeline>
<codeline lineno="61"><highlight class="comment">GL_IMAGE_2D<sp/>image2D</highlight></codeline>
<codeline lineno="62"><highlight class="comment">GL_IMAGE_3D<sp/>image3D</highlight></codeline>
<codeline lineno="63"><highlight class="comment">GL_IMAGE_2D_RECT<sp/><sp/><sp/><sp/>image2DRect</highlight></codeline>
<codeline lineno="64"><highlight class="comment">GL_IMAGE_CUBE<sp/><sp/><sp/>imageCube</highlight></codeline>
<codeline lineno="65"><highlight class="comment">GL_IMAGE_BUFFER<sp/>imageBuffer</highlight></codeline>
<codeline lineno="66"><highlight class="comment">GL_IMAGE_1D_ARRAY<sp/><sp/><sp/>image1DArray</highlight></codeline>
<codeline lineno="67"><highlight class="comment">GL_IMAGE_2D_ARRAY<sp/><sp/><sp/>image2DArray</highlight></codeline>
<codeline lineno="68"><highlight class="comment">GL_IMAGE_2D_MULTISAMPLE<sp/>image2DMS</highlight></codeline>
<codeline lineno="69"><highlight class="comment">GL_IMAGE_2D_MULTISAMPLE_ARRAY<sp/><sp/><sp/>image2DMSArray</highlight></codeline>
<codeline lineno="70"><highlight class="comment">GL_INT_IMAGE_1D<sp/>iimage1D</highlight></codeline>
<codeline lineno="71"><highlight class="comment">GL_INT_IMAGE_2D<sp/>iimage2D</highlight></codeline>
<codeline lineno="72"><highlight class="comment">GL_INT_IMAGE_3D<sp/>iimage3D</highlight></codeline>
<codeline lineno="73"><highlight class="comment">GL_INT_IMAGE_2D_RECT<sp/><sp/><sp/><sp/>iimage2DRect</highlight></codeline>
<codeline lineno="74"><highlight class="comment">GL_INT_IMAGE_CUBE<sp/><sp/><sp/>iimageCube</highlight></codeline>
<codeline lineno="75"><highlight class="comment">GL_INT_IMAGE_BUFFER<sp/>iimageBuffer</highlight></codeline>
<codeline lineno="76"><highlight class="comment">GL_INT_IMAGE_1D_ARRAY<sp/><sp/><sp/>iimage1DArray</highlight></codeline>
<codeline lineno="77"><highlight class="comment">GL_INT_IMAGE_2D_ARRAY<sp/><sp/><sp/>iimage2DArray</highlight></codeline>
<codeline lineno="78"><highlight class="comment">GL_INT_IMAGE_2D_MULTISAMPLE<sp/>iimage2DMS</highlight></codeline>
<codeline lineno="79"><highlight class="comment">GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY<sp/><sp/><sp/>iimage2DMSArray</highlight></codeline>
<codeline lineno="80"><highlight class="comment">GL_UNSIGNED_INT_IMAGE_1D<sp/><sp/><sp/><sp/>uimage1D</highlight></codeline>
<codeline lineno="81"><highlight class="comment">GL_UNSIGNED_INT_IMAGE_2D<sp/><sp/><sp/><sp/>uimage2D</highlight></codeline>
<codeline lineno="82"><highlight class="comment">GL_UNSIGNED_INT_IMAGE_3D<sp/><sp/><sp/><sp/>uimage3D</highlight></codeline>
<codeline lineno="83"><highlight class="comment">GL_UNSIGNED_INT_IMAGE_2D_RECT<sp/><sp/><sp/>uimage2DRect</highlight></codeline>
<codeline lineno="84"><highlight class="comment">GL_UNSIGNED_INT_IMAGE_CUBE<sp/><sp/>uimageCube</highlight></codeline>
<codeline lineno="85"><highlight class="comment">GL_UNSIGNED_INT_IMAGE_BUFFER<sp/><sp/><sp/><sp/>uimageBuffer</highlight></codeline>
<codeline lineno="86"><highlight class="comment">GL_UNSIGNED_INT_IMAGE_1D_ARRAY<sp/><sp/>uimage1DArray</highlight></codeline>
<codeline lineno="87"><highlight class="comment">GL_UNSIGNED_INT_IMAGE_2D_ARRAY<sp/><sp/>uimage2DArray</highlight></codeline>
<codeline lineno="88"><highlight class="comment">GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE<sp/><sp/><sp/><sp/>uimage2DMS</highlight></codeline>
<codeline lineno="89"><highlight class="comment">GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY<sp/><sp/>uimage2DMSArray</highlight></codeline>
<codeline lineno="90"><highlight class="comment">GL_UNSIGNED_INT_ATOMIC_COUNTER<sp/><sp/>atomic_uint</highlight></codeline>
<codeline lineno="91"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><ref refid="classaf__shader_1ad29fee2ad4acdc61f88fe1dca2045e12" kindref="member">af_shader::af_shader</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLchar*<sp/>vertex_shader_source,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLchar*<sp/>fragment_shader_source)</highlight></codeline>
<codeline lineno="93"><highlight class="normal">{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classaf__shader_1a90cf611ca8657170e5ef31c257db9c47" kindref="member">_vs_code</ref><sp/>=<sp/>vertex_shader_source;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classaf__shader_1aa7f3ce9a8a079c71356e7327f229e8f3" kindref="member">_fs_code</ref><sp/>=<sp/>fragment_shader_source;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classaf__shader_1a4b8048b24b6a16b18f930eb079ef3d8f" kindref="member">_vertex_shader</ref><sp/>=<sp/>glCreateShader(GL_VERTEX_SHADER);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>glShaderSource(<ref refid="classaf__shader_1a4b8048b24b6a16b18f930eb079ef3d8f" kindref="member">_vertex_shader</ref>,<sp/>1,<sp/>&amp;vertex_shader_source,<sp/>NULL);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>glCompileShader(<ref refid="classaf__shader_1a4b8048b24b6a16b18f930eb079ef3d8f" kindref="member">_vertex_shader</ref>);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(IMGUI_DISABLE_DEMO_WINDOWS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>GLint<sp/>status;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[512];</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>glGetShaderiv(<ref refid="classaf__shader_1a4b8048b24b6a16b18f930eb079ef3d8f" kindref="member">_vertex_shader</ref>,<sp/>GL_COMPILE_STATUS,<sp/>&amp;status);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>!=<sp/>GL_TRUE)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glGetShaderInfoLog(<ref refid="classaf__shader_1a4b8048b24b6a16b18f930eb079ef3d8f" kindref="member">_vertex_shader</ref>,<sp/>512,<sp/>NULL,<sp/>buffer);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classaf__shader_1a8c04adffbda2cac06b346e549986d530" kindref="member">compile_error_info</ref><sp/>=<sp/>buffer;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classaf__shader_1aa7ce19779c983d89a397e32ca3e88e61" kindref="member">_valid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//fragment<sp/>shader</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classaf__shader_1a5524f9f598398344a353ae69c7694835" kindref="member">_fragment_shader</ref><sp/>=<sp/>glCreateShader(GL_FRAGMENT_SHADER);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>glShaderSource(<ref refid="classaf__shader_1a5524f9f598398344a353ae69c7694835" kindref="member">_fragment_shader</ref>,<sp/>1,<sp/>&amp;fragment_shader_source,<sp/>NULL);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>glCompileShader(<ref refid="classaf__shader_1a5524f9f598398344a353ae69c7694835" kindref="member">_fragment_shader</ref>);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(IMGUI_DISABLE_DEMO_WINDOWS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>glGetShaderiv(<ref refid="classaf__shader_1a4b8048b24b6a16b18f930eb079ef3d8f" kindref="member">_vertex_shader</ref>,<sp/>GL_COMPILE_STATUS,<sp/>&amp;status);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>!=<sp/>GL_TRUE)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glGetShaderInfoLog(<ref refid="classaf__shader_1a4b8048b24b6a16b18f930eb079ef3d8f" kindref="member">_vertex_shader</ref>,<sp/>512,<sp/>NULL,<sp/>buffer);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classaf__shader_1a8c04adffbda2cac06b346e549986d530" kindref="member">compile_error_info</ref><sp/>=<sp/>buffer;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classaf__shader_1aa7ce19779c983d89a397e32ca3e88e61" kindref="member">_valid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//link</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classaf__shader_1acc81e76e565c701115629e40d0789e65" kindref="member">_shader_program_id</ref><sp/>=<sp/>glCreateProgram();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>glAttachShader(<ref refid="classaf__shader_1acc81e76e565c701115629e40d0789e65" kindref="member">_shader_program_id</ref>,<sp/><ref refid="classaf__shader_1a4b8048b24b6a16b18f930eb079ef3d8f" kindref="member">_vertex_shader</ref>);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>glAttachShader(<ref refid="classaf__shader_1acc81e76e565c701115629e40d0789e65" kindref="member">_shader_program_id</ref>,<sp/><ref refid="classaf__shader_1a5524f9f598398344a353ae69c7694835" kindref="member">_fragment_shader</ref>);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindFragDataLocation(<ref refid="classaf__shader_1acc81e76e565c701115629e40d0789e65" kindref="member">_shader_program_id</ref>,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;outColor&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>glLinkProgram(<ref refid="classaf__shader_1acc81e76e565c701115629e40d0789e65" kindref="member">_shader_program_id</ref>);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>glUseProgram(<ref refid="classaf__shader_1acc81e76e565c701115629e40d0789e65" kindref="member">_shader_program_id</ref>);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>GLint<sp/>idx;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>GLint<sp/>count;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>GLint<sp/>size;<sp/></highlight><highlight class="comment">//<sp/>size<sp/>of<sp/>the<sp/>variable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>GLenum<sp/>type;<sp/></highlight><highlight class="comment">//<sp/>type<sp/>of<sp/>the<sp/>variable<sp/>(float,<sp/>vec3<sp/>or<sp/>mat4,<sp/>etc)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLsizei<sp/>bufSize<sp/>=<sp/>256;<sp/></highlight><highlight class="comment">//<sp/>maximum<sp/>name<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>GLchar<sp/>name[bufSize];<sp/></highlight><highlight class="comment">//<sp/>variable<sp/>name<sp/>in<sp/>GLSL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>GLsizei<sp/>length;<sp/></highlight><highlight class="comment">//<sp/>name<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>glGetProgramiv(<ref refid="classaf__shader_1acc81e76e565c701115629e40d0789e65" kindref="member">_shader_program_id</ref>,<sp/>GL_ACTIVE_ATTRIBUTES,<sp/>&amp;count);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Active<sp/>Attributes:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>count);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(idx<sp/>=<sp/>0;<sp/>idx<sp/>&lt;<sp/>count;<sp/>idx++)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glGetActiveAttrib(<ref refid="classaf__shader_1acc81e76e565c701115629e40d0789e65" kindref="member">_shader_program_id</ref>,<sp/>(GLuint)idx,<sp/>bufSize,<sp/>&amp;length,<sp/>&amp;size,<sp/>&amp;type,<sp/>name);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Attribute<sp/>#%d<sp/>Type:<sp/>%u<sp/>Name:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>idx,<sp/>type,<sp/>name);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLuint<sp/>location<sp/>=<sp/>glGetAttribLocation(<ref refid="classaf__shader_1acc81e76e565c701115629e40d0789e65" kindref="member">_shader_program_id</ref>,<sp/>name);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classaf__shader_1a8ab747d05c8d0e5e95cc40759627ba87" kindref="member">_att_list</ref>[name]<sp/>=<sp/><ref refid="structshader__variable" kindref="compound">shader_variable</ref>(type,<sp/>location,size);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>glGetProgramiv(<ref refid="classaf__shader_1acc81e76e565c701115629e40d0789e65" kindref="member">_shader_program_id</ref>,<sp/>GL_ACTIVE_UNIFORMS,<sp/>&amp;count);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Active<sp/>Uniforms:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>count);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(idx<sp/>=<sp/>0;<sp/>idx<sp/>&lt;<sp/>count;<sp/>idx++)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glGetActiveUniform(<ref refid="classaf__shader_1acc81e76e565c701115629e40d0789e65" kindref="member">_shader_program_id</ref>,<sp/>(GLuint)idx,<sp/>bufSize,<sp/>&amp;length,<sp/>&amp;size,<sp/>&amp;type,<sp/>name);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Uniform<sp/>#%d<sp/>Type:<sp/>%u<sp/>Name:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>idx,<sp/>type,<sp/>name);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLint<sp/>location<sp/>=<sp/>glGetUniformLocation(<ref refid="classaf__shader_1acc81e76e565c701115629e40d0789e65" kindref="member">_shader_program_id</ref>,<sp/>name);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classaf__shader_1a3f935ae5acb8d11eb6c65e0b1931cb9f" kindref="member">_unf_list</ref>[name]<sp/>=<sp/><ref refid="structshader__variable" kindref="compound">shader_variable</ref>(type,<sp/>location,size);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><ref refid="classaf__shader_1a2303cce5bade2e41ce24463329717b5d" kindref="member">af_shader::~af_shader</ref>()</highlight></codeline>
<codeline lineno="168"><highlight class="normal">{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classaf__shader_1a2607d1c863176c444885d529fecada35" kindref="member">is_valid</ref>())</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glDeleteProgram(<ref refid="classaf__shader_1acc81e76e565c701115629e40d0789e65" kindref="member">_shader_program_id</ref>);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glDeleteShader(<ref refid="classaf__shader_1a4b8048b24b6a16b18f930eb079ef3d8f" kindref="member">_vertex_shader</ref>);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glDeleteShader(<ref refid="classaf__shader_1a5524f9f598398344a353ae69c7694835" kindref="member">_fragment_shader</ref>);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classaf__shader_1a2419defa0ad7d1c248afb47c710b9bd7" kindref="member">af_shader::vertex_att_pointer</ref>(initializer_list&lt;string&gt;<sp/>att_name_list)</highlight></codeline>
<codeline lineno="177"><highlight class="normal">{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride=0;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>iname<sp/>:<sp/>att_name_list)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>iatt<sp/>=<sp/><ref refid="classaf__shader_1a8ab747d05c8d0e5e95cc40759627ba87" kindref="member">_att_list</ref>.find(iname);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iatt==<ref refid="classaf__shader_1a8ab747d05c8d0e5e95cc40759627ba87" kindref="member">_att_list</ref>.end())</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;fail<sp/>to<sp/>find<sp/>attribute<sp/>name:%s\n&quot;</highlight><highlight class="normal">,<sp/>iname);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>shd_atr<sp/>=<sp/>iatt-&gt;second;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stride<sp/>+=<sp/><ref refid="af__shader_8cpp_1aae244ce383ac3b24153e9405df275999" kindref="member">shader_variable_type_size</ref>[shd_atr._variable_type]._cnt*<sp/><ref refid="af__shader_8cpp_1aae244ce383ac3b24153e9405df275999" kindref="member">shader_variable_type_size</ref>[shd_atr._variable_type]._utsize;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pointer<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>iname<sp/>:<sp/>att_name_list)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>attr<sp/>=<sp/><ref refid="classaf__shader_1a8ab747d05c8d0e5e95cc40759627ba87" kindref="member">_att_list</ref>[iname];</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glEnableVertexAttribArray(attr._location);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>shd_tp_sz<sp/>=<sp/><ref refid="af__shader_8cpp_1aae244ce383ac3b24153e9405df275999" kindref="member">shader_variable_type_size</ref>[attr._variable_type];</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glVertexAttribPointer(attr._location,<sp/>shd_tp_sz._cnt,<sp/>attr._variable_type,<sp/>GL_FALSE,<sp/>stride,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)(pointer));</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointer<sp/>+=<sp/>shd_tp_sz._cnt;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="203"><highlight class="comment">template&lt;typename<sp/>T&gt;<sp/>bool<sp/>af_shader::uniform(string<sp/>unf_name,<sp/>GLsizei<sp/>icnt,<sp/>T*<sp/>pvalue)</highlight></codeline>
<codeline lineno="204"><highlight class="comment">{</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/><sp/><sp/><sp/>auto<sp/>tt<sp/>=<sp/>_unf_list.find(unf_name);</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>(tt<sp/>==<sp/>_unf_list.end())</highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;fail<sp/>to<sp/>find<sp/>attr:%s\n&quot;,<sp/>unf_name.c_str());</highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>false;</highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/><sp/><sp/><sp/>auto&amp;<sp/>unif<sp/>=<sp/>tt-&gt;second;</highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/><sp/><sp/><sp/>switch<sp/>(unif._variable_type)</highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/><sp/><sp/><sp/>case<sp/>GL_FLOAT:</highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniform1fv(unif._location,<sp/>icnt,<sp/>pvalue);</highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/><sp/><sp/><sp/>case<sp/>GL_FLOAT_VEC2:</highlight></codeline>
<codeline lineno="218"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniform2fv(unif._location,<sp/>icnt,<sp/>pvalue);</highlight></codeline>
<codeline lineno="219"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="220"><highlight class="comment"><sp/><sp/><sp/><sp/>case<sp/>GL_FLOAT_VEC3:</highlight></codeline>
<codeline lineno="221"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniform3fv(unif._location,<sp/>icnt,<sp/>pvalue);</highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;<sp/><sp/></highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/><sp/><sp/><sp/>case<sp/>GL_FLOAT_VEC4:</highlight></codeline>
<codeline lineno="224"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniform4fv(unif._location,<sp/>icnt,<sp/>pvalue);</highlight></codeline>
<codeline lineno="225"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;<sp/><sp/></highlight></codeline>
<codeline lineno="226"><highlight class="comment"><sp/><sp/><sp/><sp/>case<sp/>GL_FLOAT_MAT2:</highlight></codeline>
<codeline lineno="227"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniformMatrix2fv(unif._location,<sp/>icnt,<sp/>GL_FALSE,<sp/>pvalue);</highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/><sp/><sp/><sp/>case<sp/>GL_FLOAT_MAT3:</highlight></codeline>
<codeline lineno="230"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniformMatrix3fv(unif._location,<sp/>icnt,<sp/>GL_FALSE,<sp/>pvalue);</highlight></codeline>
<codeline lineno="231"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="232"><highlight class="comment"><sp/><sp/><sp/><sp/>case<sp/>GL_FLOAT_MAT4:</highlight></codeline>
<codeline lineno="233"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniformMatrix4fv(unif._location,<sp/>icnt,<sp/>GL_FALSE,<sp/>pvalue);</highlight></codeline>
<codeline lineno="234"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="235"><highlight class="comment"><sp/><sp/><sp/><sp/>case<sp/>GL_FLOAT_MAT2x3:</highlight></codeline>
<codeline lineno="236"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniformMatrix2x3fv(unif._location,<sp/>icnt,<sp/>pvalue);</highlight></codeline>
<codeline lineno="237"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/><sp/><sp/><sp/>case<sp/>GL_FLOAT_MAT3x2:</highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniformMatrix3x2fv(unif._location,<sp/>icnt,<sp/>pvalue);</highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="241"><highlight class="comment"><sp/><sp/><sp/><sp/>case<sp/>GL_FLOAT_MAT2x4:</highlight></codeline>
<codeline lineno="242"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniformMatrix2x4fv(unif._location,<sp/>icnt,<sp/>pvalue);</highlight></codeline>
<codeline lineno="243"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="244"><highlight class="comment"><sp/><sp/><sp/><sp/>case<sp/>GL_FLOAT_MAT4x2:</highlight></codeline>
<codeline lineno="245"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniformMatrix4x2fv(unif._location,<sp/>icnt,<sp/>pvalue);</highlight></codeline>
<codeline lineno="246"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="247"><highlight class="comment"><sp/><sp/><sp/><sp/>case<sp/>GL_FLOAT_MAT3x4:</highlight></codeline>
<codeline lineno="248"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniformMatrix3x4fv(unif._location,<sp/>icnt,<sp/>pvalue);</highlight></codeline>
<codeline lineno="249"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="250"><highlight class="comment"><sp/><sp/><sp/><sp/>case<sp/>GL_FLOAT_MAT4x3:</highlight></codeline>
<codeline lineno="251"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniformMatrix4x3fv(unif._location,<sp/>icnt,<sp/>pvalue);</highlight></codeline>
<codeline lineno="252"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="253"><highlight class="comment"><sp/><sp/><sp/><sp/>case<sp/>GL_INT:</highlight></codeline>
<codeline lineno="254"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniform1iv(unif._location,<sp/>icnt,<sp/>pvalue);</highlight></codeline>
<codeline lineno="255"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="256"><highlight class="comment"><sp/><sp/><sp/><sp/>case<sp/>GL_INT_VEC2:</highlight></codeline>
<codeline lineno="257"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniform2iv(unif._location,<sp/>icnt,<sp/>pvalue);</highlight></codeline>
<codeline lineno="258"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="259"><highlight class="comment"><sp/><sp/><sp/><sp/>case<sp/>GL_INT_VEC3:</highlight></codeline>
<codeline lineno="260"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniform3iv(unif._location,<sp/>icnt,<sp/>pvalue);</highlight></codeline>
<codeline lineno="261"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="262"><highlight class="comment"><sp/><sp/><sp/><sp/>case<sp/>GL_INT_VEC4:</highlight></codeline>
<codeline lineno="263"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniform4iv(unif._location,<sp/>icnt,<sp/>pvalue);</highlight></codeline>
<codeline lineno="264"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="265"><highlight class="comment"><sp/><sp/><sp/><sp/>case<sp/>GL_DOUBLE:</highlight></codeline>
<codeline lineno="266"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniform1dv(unif._location,<sp/>icnt,<sp/>pvalue);</highlight></codeline>
<codeline lineno="267"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="268"><highlight class="comment"><sp/><sp/><sp/><sp/>case<sp/>GL_DOUBLE_VEC2:</highlight></codeline>
<codeline lineno="269"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniform2dv(unif._location,<sp/>icnt,<sp/>pvalue);</highlight></codeline>
<codeline lineno="270"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="271"><highlight class="comment"><sp/><sp/><sp/><sp/>case<sp/>GL_DOUBLE_VEC3:</highlight></codeline>
<codeline lineno="272"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniform3dv(unif._location,<sp/>icnt,<sp/>pvalue);</highlight></codeline>
<codeline lineno="273"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="274"><highlight class="comment"><sp/><sp/><sp/><sp/>case<sp/>GL_DOUBLE_VEC4:</highlight></codeline>
<codeline lineno="275"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniform4dv(unif._location,<sp/>icnt,<sp/>pvalue);</highlight></codeline>
<codeline lineno="276"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="277"><highlight class="comment"><sp/><sp/><sp/><sp/>case<sp/>GL_DOUBLE_MAT2:</highlight></codeline>
<codeline lineno="278"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniformMatrix2dv(unif._location,<sp/>icnt,<sp/>GL_FALSE,<sp/>pvalue);</highlight></codeline>
<codeline lineno="279"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="280"><highlight class="comment"><sp/><sp/><sp/><sp/>case<sp/>GL_DOUBLE_MAT3:</highlight></codeline>
<codeline lineno="281"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniformMatrix3dv(unif._location,<sp/>icnt,<sp/>GL_FALSE,<sp/>pvalue);</highlight></codeline>
<codeline lineno="282"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="283"><highlight class="comment"><sp/><sp/><sp/><sp/>case<sp/>GL_DOUBLE_MAT4:</highlight></codeline>
<codeline lineno="284"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniformMatrix4dv(unif._location,<sp/>icnt,<sp/>GL_FALSE,<sp/>pvalue);</highlight></codeline>
<codeline lineno="285"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="286"><highlight class="comment"><sp/><sp/><sp/><sp/>case<sp/>GL_DOUBLE_MAT2x3:</highlight></codeline>
<codeline lineno="287"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniformMatrix2x3dv(unif._location,<sp/>icnt,<sp/>GL_FALSE,pvalue);</highlight></codeline>
<codeline lineno="288"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="289"><highlight class="comment"><sp/><sp/><sp/><sp/>case<sp/>GL_DOUBLE_MAT3x2:</highlight></codeline>
<codeline lineno="290"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniformMatrix3x2dv(unif._location,<sp/>icnt,<sp/>GL_FALSE,pvalue);</highlight></codeline>
<codeline lineno="291"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="292"><highlight class="comment"><sp/><sp/><sp/><sp/>case<sp/>GL_DOUBLE_MAT2x4:</highlight></codeline>
<codeline lineno="293"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniformMatrix2x4dv(unif._location,<sp/>icnt,<sp/>GL_FALSE,pvalue);</highlight></codeline>
<codeline lineno="294"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="295"><highlight class="comment"><sp/><sp/><sp/><sp/>case<sp/>GL_DOUBLE_MAT4x2:</highlight></codeline>
<codeline lineno="296"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniformMatrix4x2dv(unif._location,<sp/>icnt,<sp/>GL_FALSE,pvalue);</highlight></codeline>
<codeline lineno="297"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="298"><highlight class="comment"><sp/><sp/><sp/><sp/>case<sp/>GL_DOUBLE_MAT3x4:</highlight></codeline>
<codeline lineno="299"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniformMatrix3x4dv(unif._location,<sp/>icnt,<sp/>GL_FALSE,pvalue);</highlight></codeline>
<codeline lineno="300"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="301"><highlight class="comment"><sp/><sp/><sp/><sp/>case<sp/>GL_DOUBLE_MAT4x3:</highlight></codeline>
<codeline lineno="302"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniformMatrix4x3dv(unif._location,<sp/>icnt,<sp/>GL_FALSE,pvalue);</highlight></codeline>
<codeline lineno="303"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="304"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="comment"><sp/><sp/><sp/><sp/>return<sp/>true;</highlight></codeline>
<codeline lineno="306"><highlight class="comment">}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classaf__shader_1a8af0aa539a1394fd869c87459dbf7683" kindref="member">af_shader::uniform</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>unf_name,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>pvalue)</highlight></codeline>
<codeline lineno="308"><highlight class="normal">{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tt<sp/>=<sp/><ref refid="classaf__shader_1a3f935ae5acb8d11eb6c65e0b1931cb9f" kindref="member">_unf_list</ref>.find(unf_name);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tt<sp/>==<sp/><ref refid="classaf__shader_1a3f935ae5acb8d11eb6c65e0b1931cb9f" kindref="member">_unf_list</ref>.end())</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;fail<sp/>to<sp/>find<sp/>attr:%s\n&quot;</highlight><highlight class="normal">,<sp/>unf_name.c_str());</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>unif<sp/>=<sp/>tt-&gt;second;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(unif._variable_type)</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GL_FLOAT:</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniform1fv(unif._location,<sp/>unif._size,<sp/>pvalue);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GL_FLOAT_VEC2:</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniform2fv(unif._location,<sp/>unif._size,<sp/>pvalue);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GL_FLOAT_VEC3:</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniform3fv(unif._location,<sp/>unif._size,<sp/>pvalue);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GL_FLOAT_VEC4:</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniform4fv(unif._location,<sp/>unif._size,<sp/>pvalue);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GL_FLOAT_MAT2:</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniformMatrix2fv(unif._location,<sp/>unif._size,<sp/>GL_FALSE,<sp/>pvalue);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GL_FLOAT_MAT3:</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniformMatrix3fv(unif._location,<sp/>unif._size,<sp/>GL_FALSE,<sp/>pvalue);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GL_FLOAT_MAT4:</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniformMatrix4fv(unif._location,<sp/>unif._size,<sp/>GL_FALSE,<sp/>pvalue);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GL_FLOAT_MAT2x3:</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniformMatrix2x3fv(unif._location,<sp/>unif._size,<sp/>GL_FALSE,<sp/>pvalue);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GL_FLOAT_MAT3x2:</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniformMatrix3x2fv(unif._location,<sp/>unif._size,<sp/>GL_FALSE,<sp/>pvalue);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GL_FLOAT_MAT2x4:</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniformMatrix2x4fv(unif._location,<sp/>unif._size,<sp/>GL_FALSE,<sp/>pvalue);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GL_FLOAT_MAT4x2:</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniformMatrix4x2fv(unif._location,<sp/>unif._size,<sp/>GL_FALSE,<sp/>pvalue);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GL_FLOAT_MAT3x4:</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniformMatrix3x4fv(unif._location,<sp/>unif._size,<sp/>GL_FALSE,<sp/>pvalue);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GL_FLOAT_MAT4x3:</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniformMatrix4x3fv(unif._location,<sp/>unif._size,<sp/>GL_FALSE,<sp/>pvalue);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;unmatched<sp/>type&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="362"><highlight class="normal">}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classaf__shader_1a8af0aa539a1394fd869c87459dbf7683" kindref="member">af_shader::uniform</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>unf_name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>pvalue)</highlight></codeline>
<codeline lineno="364"><highlight class="normal">{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tt<sp/>=<sp/><ref refid="classaf__shader_1a3f935ae5acb8d11eb6c65e0b1931cb9f" kindref="member">_unf_list</ref>.find(unf_name);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tt<sp/>==<sp/><ref refid="classaf__shader_1a3f935ae5acb8d11eb6c65e0b1931cb9f" kindref="member">_unf_list</ref>.end())</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;fail<sp/>to<sp/>find<sp/>attr:%s\n&quot;</highlight><highlight class="normal">,<sp/>unf_name.c_str());</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>unif<sp/>=<sp/>tt-&gt;second;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(unif._variable_type)</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GL_INT:</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniform1iv(unif._location,<sp/>unif._size,<sp/>pvalue);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GL_INT_VEC2:</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniform2iv(unif._location,<sp/>unif._size,<sp/>pvalue);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GL_INT_VEC3:</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniform3iv(unif._location,<sp/>unif._size,<sp/>pvalue);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GL_INT_VEC4:</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniform4iv(unif._location,<sp/>unif._size,<sp/>pvalue);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;unmatched<sp/>type&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="392"><highlight class="normal">}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classaf__shader_1a8af0aa539a1394fd869c87459dbf7683" kindref="member">af_shader::uniform</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>unf_name,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>pvalue)</highlight></codeline>
<codeline lineno="394"><highlight class="normal">{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tt<sp/>=<sp/><ref refid="classaf__shader_1a3f935ae5acb8d11eb6c65e0b1931cb9f" kindref="member">_unf_list</ref>.find(unf_name);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tt<sp/>==<sp/><ref refid="classaf__shader_1a3f935ae5acb8d11eb6c65e0b1931cb9f" kindref="member">_unf_list</ref>.end())</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;fail<sp/>to<sp/>find<sp/>attr:%s\n&quot;</highlight><highlight class="normal">,<sp/>unf_name.c_str());</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>unif<sp/>=<sp/>tt-&gt;second;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(unif._variable_type)</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GL_DOUBLE:</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniform1dv(unif._location,<sp/>unif._size,<sp/>pvalue);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GL_DOUBLE_VEC2:</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniform2dv(unif._location,<sp/>unif._size,<sp/>pvalue);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GL_DOUBLE_VEC3:</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniform3dv(unif._location,<sp/>unif._size,<sp/>pvalue);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GL_DOUBLE_VEC4:</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniform4dv(unif._location,<sp/>unif._size,<sp/>pvalue);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GL_DOUBLE_MAT2:</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniformMatrix2dv(unif._location,<sp/>unif._size,<sp/>GL_FALSE,<sp/>pvalue);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GL_DOUBLE_MAT3:</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniformMatrix3dv(unif._location,<sp/>unif._size,<sp/>GL_FALSE,<sp/>pvalue);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GL_DOUBLE_MAT4:</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniformMatrix4dv(unif._location,<sp/>unif._size,<sp/>GL_FALSE,<sp/>pvalue);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GL_DOUBLE_MAT2x3:</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniformMatrix2x3dv(unif._location,<sp/>unif._size,<sp/>GL_FALSE,<sp/>pvalue);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GL_DOUBLE_MAT3x2:</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniformMatrix3x2dv(unif._location,<sp/>unif._size,<sp/>GL_FALSE,<sp/>pvalue);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GL_DOUBLE_MAT2x4:</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniformMatrix2x4dv(unif._location,<sp/>unif._size,<sp/>GL_FALSE,<sp/>pvalue);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GL_DOUBLE_MAT4x2:</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniformMatrix4x2dv(unif._location,<sp/>unif._size,<sp/>GL_FALSE,<sp/>pvalue);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GL_DOUBLE_MAT3x4:</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniformMatrix3x4dv(unif._location,<sp/>unif._size,<sp/>GL_FALSE,<sp/>pvalue);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GL_DOUBLE_MAT4x3:</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniformMatrix4x3dv(unif._location,<sp/>unif._size,<sp/>GL_FALSE,<sp/>pvalue);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;unmatched<sp/>type&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="448"><highlight class="normal">}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classaf__shader_1a8af0aa539a1394fd869c87459dbf7683" kindref="member">af_shader::uniform</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>unf_name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ivalue)</highlight></codeline>
<codeline lineno="450"><highlight class="normal">{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tt<sp/>=<sp/><ref refid="classaf__shader_1a3f935ae5acb8d11eb6c65e0b1931cb9f" kindref="member">_unf_list</ref>.find(unf_name);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tt<sp/>==<sp/><ref refid="classaf__shader_1a3f935ae5acb8d11eb6c65e0b1931cb9f" kindref="member">_unf_list</ref>.end())</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;fail<sp/>to<sp/>find<sp/>attr:%s\n&quot;</highlight><highlight class="normal">,<sp/>unf_name.c_str());</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>unif<sp/>=<sp/>tt-&gt;second;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(unif._variable_type)</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GL_SAMPLER_2D:</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniform1i(unif._location,<sp/>ivalue);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;unmatched<sp/>type&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="468"><highlight class="normal">}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><ref refid="af__shader_8h_1a273fa95b39fcbc29f4c0ee1ddf408912" kindref="member">maf_shader</ref><sp/><ref refid="af__shader_8cpp_1af0ab9139334e7f9f0886c7af66dd1d7c" kindref="member">g_af_shader_list</ref>;</highlight></codeline>
    </programlisting>
    <location file="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/af_shader.cpp"/>
  </compounddef>
</doxygen>
