<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9">
  <compounddef id="ft__model_8cpp" kind="file" language="C++">
    <compoundname>ft_model.cpp</compoundname>
    <includes refid="ft__model_8h" local="yes">ft_model.h</includes>
    <includes local="yes">SOIL.h</includes>
    <includes local="yes">texture.h</includes>
    <includes local="no">chrono</includes>
    <incdepgraph>
      <node id="486">
        <label>functional</label>
      </node>
      <node id="500">
        <label>Mesh.h</label>
        <link refid="_mesh_8h"/>
        <childnode refid="498" relation="include">
        </childnode>
        <childnode refid="495" relation="include">
        </childnode>
        <childnode refid="496" relation="include">
        </childnode>
        <childnode refid="501" relation="include">
        </childnode>
        <childnode refid="485" relation="include">
        </childnode>
        <childnode refid="491" relation="include">
        </childnode>
        <childnode refid="502" relation="include">
        </childnode>
        <childnode refid="503" relation="include">
        </childnode>
        <childnode refid="504" relation="include">
        </childnode>
        <childnode refid="493" relation="include">
        </childnode>
        <childnode refid="505" relation="include">
        </childnode>
      </node>
      <node id="490">
        <label>imgui_internal.h</label>
      </node>
      <node id="506">
        <label>SOIL.h</label>
      </node>
      <node id="505">
        <label>ofbx.h</label>
        <link refid="ofbx_8h"/>
      </node>
      <node id="485">
        <label>string</label>
      </node>
      <node id="484">
        <label>map</label>
      </node>
      <node id="497">
        <label>gtc/type_ptr.hpp</label>
      </node>
      <node id="502">
        <label>fstream</label>
      </node>
      <node id="492">
        <label>json.h</label>
      </node>
      <node id="481">
        <label>ft_model.h</label>
        <link refid="ft__model_8h"/>
        <childnode refid="482" relation="include">
        </childnode>
        <childnode refid="494" relation="include">
        </childnode>
        <childnode refid="500" relation="include">
        </childnode>
      </node>
      <node id="496">
        <label>gtc/matrix_transform.hpp</label>
      </node>
      <node id="499">
        <label>fab.h</label>
      </node>
      <node id="482">
        <label>ft_base.h</label>
        <link refid="ft__base_8h"/>
        <childnode refid="483" relation="include">
        </childnode>
      </node>
      <node id="480">
        <label>G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/ft_model.cpp</label>
        <link refid="ft_model.cpp"/>
        <childnode refid="481" relation="include">
        </childnode>
        <childnode refid="506" relation="include">
        </childnode>
        <childnode refid="507" relation="include">
        </childnode>
        <childnode refid="508" relation="include">
        </childnode>
      </node>
      <node id="491">
        <label>vector</label>
      </node>
      <node id="488">
        <label>control_common_def.h</label>
        <link refid="control__common__def_8h"/>
        <childnode refid="489" relation="include">
        </childnode>
        <childnode refid="490" relation="include">
        </childnode>
        <childnode refid="491" relation="include">
        </childnode>
        <childnode refid="485" relation="include">
        </childnode>
        <childnode refid="492" relation="include">
        </childnode>
        <childnode refid="493" relation="include">
        </childnode>
      </node>
      <node id="483">
        <label>factory.h</label>
        <link refid="factory_8h"/>
        <childnode refid="484" relation="include">
        </childnode>
        <childnode refid="485" relation="include">
        </childnode>
        <childnode refid="486" relation="include">
        </childnode>
        <childnode refid="487" relation="include">
        </childnode>
        <childnode refid="488" relation="include">
        </childnode>
      </node>
      <node id="503">
        <label>sstream</label>
      </node>
      <node id="495">
        <label>glm.hpp</label>
      </node>
      <node id="489">
        <label>imgui.h</label>
      </node>
      <node id="504">
        <label>iostream</label>
      </node>
      <node id="501">
        <label>gtx/string_cast.hpp</label>
      </node>
      <node id="498">
        <label>GL/gl3w.h</label>
      </node>
      <node id="508">
        <label>chrono</label>
      </node>
      <node id="493">
        <label>algorithm</label>
      </node>
      <node id="507">
        <label>texture.h</label>
      </node>
      <node id="487">
        <label>memory</label>
      </node>
      <node id="494">
        <label>basic3d.h</label>
        <link refid="basic3d_8h"/>
        <childnode refid="489" relation="include">
        </childnode>
        <childnode refid="490" relation="include">
        </childnode>
        <childnode refid="491" relation="include">
        </childnode>
        <childnode refid="484" relation="include">
        </childnode>
        <childnode refid="486" relation="include">
        </childnode>
        <childnode refid="495" relation="include">
        </childnode>
        <childnode refid="496" relation="include">
        </childnode>
        <childnode refid="497" relation="include">
        </childnode>
        <childnode refid="498" relation="include">
        </childnode>
        <childnode refid="499" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="ft__model_8cpp_1a6442f9b3b14f51e8558c73573039e3ee" prot="public" static="no" mutable="no">
        <type>string</type>
        <definition>string g_cureent_project_file_path</definition>
        <argsstring></argsstring>
        <name>g_cureent_project_file_path</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/ft_model.cpp" line="35" column="1" bodyfile="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/main.cpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ft__model_8cpp_1a4c72e8a0eeccf7f90cce66b4e1e327d4" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* mesh_fold</definition>
        <argsstring></argsstring>
        <name>mesh_fold</name>
        <initializer>= &quot;mesh_res\\&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/ft_model.cpp" line="36" column="1" bodyfile="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/ft_model.cpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ft__model_8h" kindref="compound">ft_model.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;SOIL.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;texture.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal">GLuint<sp/><ref refid="classft__model_1ac86744bcac38696cd55c13f7495f307a" kindref="member">ft_model::_vao</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5"><highlight class="normal">GLuint<sp/><ref refid="classft__model_1a1f019c8c00ee9b3ffd74fd037906c09b" kindref="member">ft_model::_vbo</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><ref refid="classft__model_1aaeec63b43189a72d0aa723b494eaeea9" kindref="member">ft_model::_model_instance_cnt</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><ref refid="classft__model_1a605aca30b391133e945085d31cc2f835" kindref="member">ft_model::ft_model</ref>()</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>:<ref refid="classft__base" kindref="compound">ft_base</ref>()</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>_pshader(<ref refid="basic3d_8cpp_1ab428392876bdcf81e006c4f9895ca44e" kindref="member">g_shader_list</ref>[</highlight><highlight class="stringliteral">&quot;texture_shader&quot;</highlight><highlight class="normal">][0].get())</highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_model_instance_cnt<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glGenVertexArrays(1,<sp/>&amp;_vao);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glGenBuffers(1,<sp/>&amp;_vbo);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//vector&lt;string&gt;<sp/>attr_name_list<sp/>=<sp/>{<sp/>&quot;position&quot;,<sp/>&quot;qcolor&quot;,<sp/>&quot;texcoord&quot;<sp/>};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//_pshader-&gt;loading_shader_attributes_from_avbo(_vao,<sp/>_vbo,<sp/>g_vertices,<sp/>sizeof(g_vertices),<sp/>\</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attr_name_list,<sp/>_ebo,<sp/>g_indices,<sp/>sizeof(g_indices));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>_model_instance_cnt++;</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><ref refid="classft__model_1a293bbc04bc8acef90700279da25edb11" kindref="member">ft_model::~ft_model</ref>()</highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classft__model_1aaeec63b43189a72d0aa723b494eaeea9" kindref="member">_model_instance_cnt</ref>--;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classft__model_1aaeec63b43189a72d0aa723b494eaeea9" kindref="member">_model_instance_cnt</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glDeleteVertexArrays(1,<sp/>&amp;<ref refid="classft__model_1ac86744bcac38696cd55c13f7495f307a" kindref="member">_vao</ref>);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glDeleteBuffers(1,<sp/>&amp;<ref refid="classft__model_1a1f019c8c00ee9b3ffd74fd037906c09b" kindref="member">_vbo</ref>);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="ft__model_8cpp_1a6442f9b3b14f51e8558c73573039e3ee" kindref="member">g_cureent_project_file_path</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="ft__model_8cpp_1a4c72e8a0eeccf7f90cce66b4e1e327d4" kindref="member">mesh_fold</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;mesh_res\\&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classft__model_1aa707a075be69932b53a866cbf4a9b00a" kindref="member">ft_model::load_mesh_data_2_vertices</ref>()</highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>str_texture_file<sp/>=<sp/>g_cureent_project_file_path.substr(0,<sp/>g_cureent_project_file_path.find_last_of(</highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">)<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>str_texture_file<sp/>+=<sp/><ref refid="ft__model_8cpp_1a4c72e8a0eeccf7f90cce66b4e1e327d4" kindref="member">mesh_fold</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>str_mesh_file<sp/>=<sp/>str_texture_file;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>str_texture_file<sp/>+=<sp/><ref refid="classft__model_1af7066fa6575097b5d324d24f2332e868" kindref="member">_pt</ref>.<ref refid="structft__model_1_1intl__pt_1ab8affea15844cb9435c20edf3988c570" kindref="member">_texture_file</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classft__model_1af7066fa6575097b5d324d24f2332e868" kindref="member">_pt</ref>.<ref refid="structft__model_1_1intl__pt_1a3208d42f97f13c50c904e83e691edcf6" kindref="member">_textureId</ref><sp/>=<sp/>TextureHelper::load2DTexture(str_texture_file.c_str(),<sp/><ref refid="classft__model_1af7066fa6575097b5d324d24f2332e868" kindref="member">\</ref></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><ref refid="classft__model_1af7066fa6575097b5d324d24f2332e868" kindref="member">		_pt</ref>.<ref refid="structft__model_1_1intl__pt_1a59da986a86975c5941889a5acf6abecf" kindref="member">_txt_width</ref>,<sp/><ref refid="classft__model_1af7066fa6575097b5d324d24f2332e868" kindref="member">_pt</ref>.<ref refid="structft__model_1_1intl__pt_1a63170d9895922680df105956e8f866a4" kindref="member">_txt_height</ref>,<sp/>GL_RGBA,<sp/>GL_RGBA,<sp/>SOIL_LOAD_RGBA);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>str_mesh_file<sp/>+=<sp/><ref refid="classft__model_1af7066fa6575097b5d324d24f2332e868" kindref="member">_pt</ref>.<ref refid="structft__model_1_1intl__pt_1afc18803222a7d52bbcdaddcd6a50a649" kindref="member">_mesh_data_file</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_mesh_8cpp_1a8fd5544da0b3d3b428d5228e7b2acf86" kindref="member">loadFBXFile</ref>(str_mesh_file.c_str(),<sp/><ref refid="classft__model_1a4461265ba7a412c53b541ac502cbabf0" kindref="member">_vertData</ref>);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classft__model_1a5383eefc3da16a551222cc6d42e9ca3a" kindref="member">ft_model::load_vertics_2_vbo</ref>()</highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//glBindVertexArray(_vao);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/>attr_name_list<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;position&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;textcoord&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;normal&quot;</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classft__model_1a8764c988b2ea3e77d58eb78557613e86" kindref="member">_pshader</ref>-&gt;<ref refid="classbasic__shader_1aa3500ec9cf48070d1abff9ac74accc52" kindref="member">loading_shader_attributes_from_avbo</ref>(<ref refid="classft__model_1ac86744bcac38696cd55c13f7495f307a" kindref="member">_vao</ref>,<sp/><ref refid="classft__model_1a1f019c8c00ee9b3ffd74fd037906c09b" kindref="member">_vbo</ref>,<sp/>&amp;<ref refid="classft__model_1a4461265ba7a412c53b541ac502cbabf0" kindref="member">_vertData</ref>[0],<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_vertex" kindref="compound">Vertex</ref>)*<sp/><ref refid="classft__model_1a4461265ba7a412c53b541ac502cbabf0" kindref="member">_vertData</ref>.size(),<sp/>attr_name_list);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>glActiveTexture(GL_TEXTURE0);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindTexture(GL_TEXTURE_2D,<sp/><ref refid="classft__model_1af7066fa6575097b5d324d24f2332e868" kindref="member">_pt</ref>.<ref refid="structft__model_1_1intl__pt_1a3208d42f97f13c50c904e83e691edcf6" kindref="member">_textureId</ref>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classft__model_1a8764c988b2ea3e77d58eb78557613e86" kindref="member">_pshader</ref>-&gt;<ref refid="classbasic__shader_1ac513295cb8a2bac1c7ce1438bd23dc5a" kindref="member">set_uniform_text</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;text&quot;</highlight><highlight class="normal">),<sp/>0);</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;chrono&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classft__model_1ab3f8dca7aaec51eaec88a24b2118e8a0" kindref="member">ft_model::draw</ref>()</highlight></codeline>
<codeline lineno="63"><highlight class="normal">{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classft__model_1a4461265ba7a412c53b541ac502cbabf0" kindref="member">_vertData</ref>.size()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classft__model_1a8764c988b2ea3e77d58eb78557613e86" kindref="member">_pshader</ref>-&gt;<ref refid="classbasic__shader_1ade5bd7cebb1b9e6ceaea6081e20f676e" kindref="member">use</ref>();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glBindVertexArray(<ref refid="classft__model_1ac86744bcac38696cd55c13f7495f307a" kindref="member">_vao</ref>);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*static<sp/>auto<sp/>t_start<sp/>=<sp/>std::chrono::high_resolution_clock::now();</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>auto<sp/>t_now<sp/>=<sp/>std::chrono::high_resolution_clock::now();</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float<sp/>time<sp/>=<sp/>std::chrono::duration_cast&lt;std::chrono::duration&lt;float&gt;&gt;(t_now<sp/>-<sp/>t_start).count();</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm::mat4<sp/>model<sp/>=<sp/>glm::mat4(1.0f);</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model<sp/>=<sp/>glm::rotate(</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model,</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time*<sp/>glm::radians(30.0f),</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm::vec3(0.0f,<sp/>1.0f,<sp/>0.0f)</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_pshader-&gt;set_uniform(string(&quot;model&quot;),<sp/>1,<sp/>glm::value_ptr(model));*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glActiveTexture(GL_TEXTURE0);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glBindTexture(GL_TEXTURE_2D,<ref refid="classft__model_1af7066fa6575097b5d324d24f2332e868" kindref="member">_pt</ref>.<ref refid="structft__model_1_1intl__pt_1a3208d42f97f13c50c904e83e691edcf6" kindref="member">_textureId</ref>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glDrawArrays(GL_TRIANGLES,<sp/>0,<sp/><ref refid="classft__model_1a4461265ba7a412c53b541ac502cbabf0" kindref="member">_vertData</ref>.size());</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(IMGUI_DISABLE_DEMO_WINDOWS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classft__model_1a63d5bba53459d5646f5a7ea8269c8f7e" kindref="member">ft_model::draw_peroperty_page</ref>()</highlight></codeline>
<codeline lineno="88"><highlight class="normal">{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui::InputText(</highlight><highlight class="stringliteral">&quot;-texture<sp/>file&quot;</highlight><highlight class="normal">,<sp/><ref refid="classft__model_1af7066fa6575097b5d324d24f2332e868" kindref="member">_pt</ref>.<ref refid="structft__model_1_1intl__pt_1ab8affea15844cb9435c20edf3988c570" kindref="member">_texture_file</ref>,<sp/><ref refid="basic3d_8h_1afddfc0468a0fb0d80c116b5e16b9be17" kindref="member">FILE_NAME_LEN</ref>);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui::InputText(</highlight><highlight class="stringliteral">&quot;-mesh<sp/>data<sp/>file&quot;</highlight><highlight class="normal">,<sp/><ref refid="classft__model_1af7066fa6575097b5d324d24f2332e868" kindref="member">_pt</ref>.<ref refid="structft__model_1_1intl__pt_1afc18803222a7d52bbcdaddcd6a50a649" kindref="member">_mesh_data_file</ref>,<sp/><ref refid="basic3d_8h_1afddfc0468a0fb0d80c116b5e16b9be17" kindref="member">FILE_NAME_LEN</ref>);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ImGui::Button(</highlight><highlight class="stringliteral">&quot;loading<sp/>mesh<sp/>data&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classft__model_1a4461265ba7a412c53b541ac502cbabf0" kindref="member">_vertData</ref>.size()&gt;0)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classft__model_1a4461265ba7a412c53b541ac502cbabf0" kindref="member">_vertData</ref>.clear();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classft__model_1aa707a075be69932b53a866cbf4a9b00a" kindref="member">load_mesh_data_2_vertices</ref>();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classft__model_1a5383eefc3da16a551222cc6d42e9ca3a" kindref="member">load_vertics_2_vbo</ref>();</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classft__model_1a897510ba27e454f5b127cc7b311175e9" kindref="member">ft_model::init_from_json</ref>(Value&amp;<sp/>jvalue)</highlight></codeline>
<codeline lineno="103"><highlight class="normal">{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classft__model_1a0ad0702034ab8c25f2402cac97f0fc9d" kindref="member">ft_model::init_json_unit</ref>(Value&amp;<sp/>junit)</highlight></codeline>
<codeline lineno="107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/ft_model.cpp"/>
  </compounddef>
</doxygen>
