<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9">
  <compounddef id="structofbx_1_1_geometry_impl" kind="struct" language="C++" prot="public">
    <compoundname>ofbx::GeometryImpl</compoundname>
    <basecompoundref refid="structofbx_1_1_geometry" prot="public" virt="non-virtual">ofbx::Geometry</basecompoundref>
    <innerclass refid="structofbx_1_1_geometry_impl_1_1_new_vertex" prot="public">ofbx::GeometryImpl::NewVertex</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="structofbx_1_1_geometry_impl_1ab81bd25139a1d629cec2592ecdd4479b" prot="public" static="no">
        <name>VertexDataMapping</name>
        <enumvalue id="structofbx_1_1_geometry_impl_1ab81bd25139a1d629cec2592ecdd4479ba6e7d4551f9abc9531646cc89e8fcb619" prot="public">
          <name>BY_POLYGON_VERTEX</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structofbx_1_1_geometry_impl_1ab81bd25139a1d629cec2592ecdd4479bae7bc5b2fd19ae3bbd400c2d7e1333a87" prot="public">
          <name>BY_POLYGON</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structofbx_1_1_geometry_impl_1ab81bd25139a1d629cec2592ecdd4479baa89484518f2e473f4770907fd67aab16" prot="public">
          <name>BY_VERTEX</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/ofbx.cpp" line="1099" column="1" bodyfile="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/ofbx.cpp" bodystart="1098" bodyend="1103"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structofbx_1_1_geometry_impl_1a716dff4530d72430e52a7ac39943a373" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structofbx_1_1_vec3" kindref="compound">Vec3</ref> &gt;</type>
        <definition>std::vector&lt;Vec3&gt; ofbx::GeometryImpl::vertices</definition>
        <argsstring></argsstring>
        <name>vertices</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/ofbx.cpp" line="1113" column="1" bodyfile="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/ofbx.cpp" bodystart="1113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structofbx_1_1_geometry_impl_1a60ff554b3ce2950dc41c1373c282ec2f" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structofbx_1_1_vec3" kindref="compound">Vec3</ref> &gt;</type>
        <definition>std::vector&lt;Vec3&gt; ofbx::GeometryImpl::normals</definition>
        <argsstring></argsstring>
        <name>normals</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/ofbx.cpp" line="1114" column="1" bodyfile="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/ofbx.cpp" bodystart="1114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structofbx_1_1_geometry_impl_1ae0cdf377f5d5e60dacf99ba437fce38a" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structofbx_1_1_vec2" kindref="compound">Vec2</ref> &gt;</type>
        <definition>std::vector&lt;Vec2&gt; ofbx::GeometryImpl::uvs[s_uvs_max]</definition>
        <argsstring>[s_uvs_max]</argsstring>
        <name>uvs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/ofbx.cpp" line="1115" column="1" bodyfile="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/ofbx.cpp" bodystart="1115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structofbx_1_1_geometry_impl_1ab9bffd3d12ff02e08d278d120c575829" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structofbx_1_1_vec4" kindref="compound">Vec4</ref> &gt;</type>
        <definition>std::vector&lt;Vec4&gt; ofbx::GeometryImpl::colors</definition>
        <argsstring></argsstring>
        <name>colors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/ofbx.cpp" line="1116" column="1" bodyfile="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/ofbx.cpp" bodystart="1116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structofbx_1_1_geometry_impl_1aa401783ea37ce22213bd39b4346b083a" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structofbx_1_1_vec3" kindref="compound">Vec3</ref> &gt;</type>
        <definition>std::vector&lt;Vec3&gt; ofbx::GeometryImpl::tangents</definition>
        <argsstring></argsstring>
        <name>tangents</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/ofbx.cpp" line="1117" column="1" bodyfile="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/ofbx.cpp" bodystart="1117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structofbx_1_1_geometry_impl_1a2f6f5831774c32f8d4f6baa62bfd5851" prot="public" static="no" mutable="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; ofbx::GeometryImpl::materials</definition>
        <argsstring></argsstring>
        <name>materials</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/ofbx.cpp" line="1118" column="1" bodyfile="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/ofbx.cpp" bodystart="1118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structofbx_1_1_geometry_impl_1aa948ff73303d2405b252649baaa4694c" prot="public" static="no" mutable="no">
        <type>const <ref refid="structofbx_1_1_skin" kindref="compound">Skin</ref> *</type>
        <definition>const Skin* ofbx::GeometryImpl::skin</definition>
        <argsstring></argsstring>
        <name>skin</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/ofbx.cpp" line="1120" column="1" bodyfile="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/ofbx.cpp" bodystart="1120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structofbx_1_1_geometry_impl_1a6a3335d54dc2612f7fdc40e2750cbd47" prot="public" static="no" mutable="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; ofbx::GeometryImpl::to_old_vertices</definition>
        <argsstring></argsstring>
        <name>to_old_vertices</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/ofbx.cpp" line="1122" column="1" bodyfile="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/ofbx.cpp" bodystart="1122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structofbx_1_1_geometry_impl_1a1a1fb2396f3fe363c86bf29a661b62d6" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structofbx_1_1_geometry_impl_1_1_new_vertex" kindref="compound">NewVertex</ref> &gt;</type>
        <definition>std::vector&lt;NewVertex&gt; ofbx::GeometryImpl::to_new_vertices</definition>
        <argsstring></argsstring>
        <name>to_new_vertices</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/ofbx.cpp" line="1123" column="1" bodyfile="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/ofbx.cpp" bodystart="1123" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structofbx_1_1_geometry_impl_1a749d703738708eff989e8d2184f66f6f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ofbx::GeometryImpl::GeometryImpl</definition>
        <argsstring>(const Scene &amp;_scene, const IElement &amp;_element)</argsstring>
        <name>GeometryImpl</name>
        <param>
          <type>const <ref refid="structofbx_1_1_scene" kindref="compound">Scene</ref> &amp;</type>
          <declname>_scene</declname>
        </param>
        <param>
          <type>const <ref refid="structofbx_1_1_i_element" kindref="compound">IElement</ref> &amp;</type>
          <declname>_element</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/ofbx.cpp" line="1125" column="1" bodyfile="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/ofbx.cpp" bodystart="1125" bodyend="1128"/>
      </memberdef>
      <memberdef kind="function" id="structofbx_1_1_geometry_impl_1aede58c8ff9b86e9eae0bf4156ca10eb9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="structofbx_1_1_object_1a97a0620e9e5df23dcb848b63f2a471f5" kindref="member">Type</ref></type>
        <definition>Type ofbx::GeometryImpl::getType</definition>
        <argsstring>() const override</argsstring>
        <name>getType</name>
        <reimplements refid="structofbx_1_1_object_1a351a55f8f04b3ead907280f3a4dcc48c">getType</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/ofbx.cpp" line="1131" column="1" bodyfile="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/ofbx.cpp" bodystart="1131" bodyend="1131"/>
      </memberdef>
      <memberdef kind="function" id="structofbx_1_1_geometry_impl_1a85b146d09023c99ed6db1618ff070d33" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>int ofbx::GeometryImpl::getVertexCount</definition>
        <argsstring>() const override</argsstring>
        <name>getVertexCount</name>
        <reimplements refid="structofbx_1_1_geometry_1a92e600a1cee0dfcf83079b70872ef508">getVertexCount</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/ofbx.cpp" line="1132" column="1" bodyfile="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/ofbx.cpp" bodystart="1132" bodyend="1132"/>
      </memberdef>
      <memberdef kind="function" id="structofbx_1_1_geometry_impl_1aaa8be49bcbb12e09ddb30657b8526599" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const <ref refid="structofbx_1_1_vec3" kindref="compound">Vec3</ref> *</type>
        <definition>const Vec3* ofbx::GeometryImpl::getVertices</definition>
        <argsstring>() const override</argsstring>
        <name>getVertices</name>
        <reimplements refid="structofbx_1_1_geometry_1aebdfdb243f92d973baf6bbfbc5790396">getVertices</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/ofbx.cpp" line="1133" column="1" bodyfile="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/ofbx.cpp" bodystart="1133" bodyend="1133"/>
      </memberdef>
      <memberdef kind="function" id="structofbx_1_1_geometry_impl_1ac09e52efa205f69e2643570b17c36ca8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const <ref refid="structofbx_1_1_vec3" kindref="compound">Vec3</ref> *</type>
        <definition>const Vec3* ofbx::GeometryImpl::getNormals</definition>
        <argsstring>() const override</argsstring>
        <name>getNormals</name>
        <reimplements refid="structofbx_1_1_geometry_1ac243cf10f06b9bfdac20c7bd554851ce">getNormals</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/ofbx.cpp" line="1134" column="1" bodyfile="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/ofbx.cpp" bodystart="1134" bodyend="1134"/>
      </memberdef>
      <memberdef kind="function" id="structofbx_1_1_geometry_impl_1a28cd7168fe85e82bbfaa0cce41152995" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const <ref refid="structofbx_1_1_vec2" kindref="compound">Vec2</ref> *</type>
        <definition>const Vec2* ofbx::GeometryImpl::getUVs</definition>
        <argsstring>(int index=0) const override</argsstring>
        <name>getUVs</name>
        <reimplements refid="structofbx_1_1_geometry_1a3afede7bb38ecf33f7bb18fd7e1b5806">getUVs</reimplements>
        <param>
          <type>int</type>
          <declname>index</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/ofbx.cpp" line="1135" column="1" bodyfile="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/ofbx.cpp" bodystart="1135" bodyend="1135"/>
      </memberdef>
      <memberdef kind="function" id="structofbx_1_1_geometry_impl_1a5be12026b6059b7743836f28d4d66524" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const <ref refid="structofbx_1_1_vec4" kindref="compound">Vec4</ref> *</type>
        <definition>const Vec4* ofbx::GeometryImpl::getColors</definition>
        <argsstring>() const override</argsstring>
        <name>getColors</name>
        <reimplements refid="structofbx_1_1_geometry_1a6c61ac4e0e1203c6a9d423bd407cb73c">getColors</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/ofbx.cpp" line="1136" column="1" bodyfile="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/ofbx.cpp" bodystart="1136" bodyend="1136"/>
      </memberdef>
      <memberdef kind="function" id="structofbx_1_1_geometry_impl_1a6a4f0b11f21421d52e737cd940c95c79" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const <ref refid="structofbx_1_1_vec3" kindref="compound">Vec3</ref> *</type>
        <definition>const Vec3* ofbx::GeometryImpl::getTangents</definition>
        <argsstring>() const override</argsstring>
        <name>getTangents</name>
        <reimplements refid="structofbx_1_1_geometry_1a716597434c37fd1876df24b55f89ce52">getTangents</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/ofbx.cpp" line="1137" column="1" bodyfile="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/ofbx.cpp" bodystart="1137" bodyend="1137"/>
      </memberdef>
      <memberdef kind="function" id="structofbx_1_1_geometry_impl_1a250745a2b516298a073a62ad5e112a1c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const <ref refid="structofbx_1_1_skin" kindref="compound">Skin</ref> *</type>
        <definition>const Skin* ofbx::GeometryImpl::getSkin</definition>
        <argsstring>() const override</argsstring>
        <name>getSkin</name>
        <reimplements refid="structofbx_1_1_geometry_1a5ce85cef69194c132456400103e31d79">getSkin</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/ofbx.cpp" line="1138" column="1" bodyfile="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/ofbx.cpp" bodystart="1138" bodyend="1138"/>
      </memberdef>
      <memberdef kind="function" id="structofbx_1_1_geometry_impl_1adec450d97662fb3339d2227f0d3a4ace" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const int *</type>
        <definition>const int* ofbx::GeometryImpl::getMaterials</definition>
        <argsstring>() const override</argsstring>
        <name>getMaterials</name>
        <reimplements refid="structofbx_1_1_geometry_1aaa1163a7002cdf092a36351370b422a9">getMaterials</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/ofbx.cpp" line="1139" column="1" bodyfile="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/ofbx.cpp" bodystart="1139" bodyend="1139"/>
      </memberdef>
      <memberdef kind="function" id="structofbx_1_1_geometry_impl_1a96ae997cedef8544503da18d7e653093" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ofbx::GeometryImpl::triangulate</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;old_indices, std::vector&lt; int &gt; *indices, std::vector&lt; int &gt; *to_old)</argsstring>
        <name>triangulate</name>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>old_indices</declname>
        </param>
        <param>
          <type>std::vector&lt; int &gt; *</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>std::vector&lt; int &gt; *</type>
          <declname>to_old</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/ofbx.cpp" line="1142" column="1" bodyfile="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/ofbx.cpp" bodystart="1142" bodyend="1176"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="344">
        <label>ofbx::Object</label>
        <link refid="structofbx_1_1_object"/>
      </node>
      <node id="342">
        <label>ofbx::GeometryImpl</label>
        <link refid="structofbx_1_1_geometry_impl"/>
        <childnode refid="343" relation="public-inheritance">
        </childnode>
      </node>
      <node id="343">
        <label>ofbx::Geometry</label>
        <link refid="structofbx_1_1_geometry"/>
        <childnode refid="344" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="353">
        <label>ofbx::Property</label>
        <link refid="structofbx_1_1_property"/>
        <childnode refid="354" relation="public-inheritance">
        </childnode>
        <childnode refid="353" relation="usage">
          <edgelabel>next</edgelabel>
        </childnode>
        <childnode refid="355" relation="usage">
          <edgelabel>value</edgelabel>
        </childnode>
      </node>
      <node id="347">
        <label>ofbx::Object</label>
        <link refid="structofbx_1_1_object"/>
        <childnode refid="347" relation="usage">
          <edgelabel>node_attribute</edgelabel>
        </childnode>
        <childnode refid="348" relation="usage">
          <edgelabel>scene</edgelabel>
        </childnode>
        <childnode refid="352" relation="usage">
          <edgelabel>element</edgelabel>
        </childnode>
      </node>
      <node id="350">
        <label>ofbx::Root</label>
        <link refid="structofbx_1_1_root"/>
        <childnode refid="347" relation="public-inheritance">
        </childnode>
      </node>
      <node id="354">
        <label>ofbx::IElementProperty</label>
        <link refid="structofbx_1_1_i_element_property"/>
      </node>
      <node id="345">
        <label>ofbx::GeometryImpl</label>
        <link refid="structofbx_1_1_geometry_impl"/>
        <childnode refid="346" relation="public-inheritance">
        </childnode>
        <childnode refid="356" relation="usage">
          <edgelabel>skin</edgelabel>
        </childnode>
      </node>
      <node id="346">
        <label>ofbx::Geometry</label>
        <link refid="structofbx_1_1_geometry"/>
        <childnode refid="347" relation="public-inheritance">
        </childnode>
      </node>
      <node id="349">
        <label>ofbx::IScene</label>
        <link refid="structofbx_1_1_i_scene"/>
      </node>
      <node id="352">
        <label>ofbx::IElement</label>
        <link refid="structofbx_1_1_i_element"/>
      </node>
      <node id="348">
        <label>ofbx::Scene</label>
        <link refid="structofbx_1_1_scene"/>
        <childnode refid="349" relation="public-inheritance">
        </childnode>
        <childnode refid="350" relation="usage">
          <edgelabel>m_root</edgelabel>
        </childnode>
        <childnode refid="351" relation="usage">
          <edgelabel>m_root_element</edgelabel>
        </childnode>
      </node>
      <node id="356">
        <label>ofbx::Skin</label>
        <link refid="structofbx_1_1_skin"/>
        <childnode refid="347" relation="public-inheritance">
        </childnode>
      </node>
      <node id="351">
        <label>ofbx::Element</label>
        <link refid="structofbx_1_1_element"/>
        <childnode refid="352" relation="public-inheritance">
        </childnode>
        <childnode refid="353" relation="usage">
          <edgelabel>first_property</edgelabel>
        </childnode>
        <childnode refid="355" relation="usage">
          <edgelabel>id</edgelabel>
        </childnode>
        <childnode refid="351" relation="usage">
          <edgelabel>sibling</edgelabel>
          <edgelabel>child</edgelabel>
        </childnode>
      </node>
      <node id="355">
        <label>ofbx::DataView</label>
        <link refid="structofbx_1_1_data_view"/>
      </node>
    </collaborationgraph>
    <location file="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/ofbx.cpp" line="1097" column="1" bodyfile="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/ofbx.cpp" bodystart="1096" bodyend="1177"/>
    <listofallmembers>
      <member refid="structofbx_1_1_geometry_impl_1ab81bd25139a1d629cec2592ecdd4479bae7bc5b2fd19ae3bbd400c2d7e1333a87" prot="public" virt="non-virtual"><scope>ofbx::GeometryImpl</scope><name>BY_POLYGON</name></member>
      <member refid="structofbx_1_1_geometry_impl_1ab81bd25139a1d629cec2592ecdd4479ba6e7d4551f9abc9531646cc89e8fcb619" prot="public" virt="non-virtual"><scope>ofbx::GeometryImpl</scope><name>BY_POLYGON_VERTEX</name></member>
      <member refid="structofbx_1_1_geometry_impl_1ab81bd25139a1d629cec2592ecdd4479baa89484518f2e473f4770907fd67aab16" prot="public" virt="non-virtual"><scope>ofbx::GeometryImpl</scope><name>BY_VERTEX</name></member>
      <member refid="structofbx_1_1_geometry_impl_1ab9bffd3d12ff02e08d278d120c575829" prot="public" virt="non-virtual"><scope>ofbx::GeometryImpl</scope><name>colors</name></member>
      <member refid="structofbx_1_1_object_1a37c36cf361d6b9783348f2dbdc1462c8" prot="public" virt="non-virtual"><scope>ofbx::GeometryImpl</scope><name>element</name></member>
      <member refid="structofbx_1_1_object_1a265dd11d0863c60bd537f18ef7a8e028" prot="public" virt="non-virtual"><scope>ofbx::GeometryImpl</scope><name>evalLocal</name></member>
      <member refid="structofbx_1_1_geometry_1ae39dc4f47bf6ed8aef4ee9e15911bd98" prot="public" virt="non-virtual"><scope>ofbx::GeometryImpl</scope><name>Geometry</name></member>
      <member refid="structofbx_1_1_geometry_impl_1a749d703738708eff989e8d2184f66f6f" prot="public" virt="non-virtual"><scope>ofbx::GeometryImpl</scope><name>GeometryImpl</name></member>
      <member refid="structofbx_1_1_geometry_impl_1a5be12026b6059b7743836f28d4d66524" prot="public" virt="virtual"><scope>ofbx::GeometryImpl</scope><name>getColors</name></member>
      <member refid="structofbx_1_1_object_1abbe7839bd1a2e6469c05fd82e4fa3334" prot="public" virt="non-virtual"><scope>ofbx::GeometryImpl</scope><name>getGlobalTransform</name></member>
      <member refid="structofbx_1_1_object_1afe2a2a4f6998a42eb5de7bd04fb93f2d" prot="public" virt="non-virtual"><scope>ofbx::GeometryImpl</scope><name>getLocalRotation</name></member>
      <member refid="structofbx_1_1_object_1a91007293b823fea15253a32ef6a8df2d" prot="public" virt="non-virtual"><scope>ofbx::GeometryImpl</scope><name>getLocalScaling</name></member>
      <member refid="structofbx_1_1_object_1aa3de47089adf9fd9e19b674b7eeb4923" prot="public" virt="non-virtual"><scope>ofbx::GeometryImpl</scope><name>getLocalTranslation</name></member>
      <member refid="structofbx_1_1_geometry_impl_1adec450d97662fb3339d2227f0d3a4ace" prot="public" virt="virtual"><scope>ofbx::GeometryImpl</scope><name>getMaterials</name></member>
      <member refid="structofbx_1_1_geometry_impl_1ac09e52efa205f69e2643570b17c36ca8" prot="public" virt="virtual"><scope>ofbx::GeometryImpl</scope><name>getNormals</name></member>
      <member refid="structofbx_1_1_object_1a117b5609981c4c3f45f77c758de097a3" prot="public" virt="non-virtual"><scope>ofbx::GeometryImpl</scope><name>getParent</name></member>
      <member refid="structofbx_1_1_object_1a52008edb38ebc35269d1523b0cb4599a" prot="public" virt="non-virtual"><scope>ofbx::GeometryImpl</scope><name>getPostRotation</name></member>
      <member refid="structofbx_1_1_object_1ac80b1e2e54a0325397505abcdb40b254" prot="public" virt="non-virtual"><scope>ofbx::GeometryImpl</scope><name>getPreRotation</name></member>
      <member refid="structofbx_1_1_object_1a7434e37ced967fb1bf8c8bb6a12a674e" prot="public" virt="non-virtual"><scope>ofbx::GeometryImpl</scope><name>getRotationOffset</name></member>
      <member refid="structofbx_1_1_object_1ae5325426051bc9083973e7db6ed10b73" prot="public" virt="non-virtual"><scope>ofbx::GeometryImpl</scope><name>getRotationOrder</name></member>
      <member refid="structofbx_1_1_object_1a554fe3984a6ddf1b5a03a811633591b5" prot="public" virt="non-virtual"><scope>ofbx::GeometryImpl</scope><name>getRotationPivot</name></member>
      <member refid="structofbx_1_1_object_1a066556d7b2361538093050d3422b6676" prot="public" virt="non-virtual"><scope>ofbx::GeometryImpl</scope><name>getScalingOffset</name></member>
      <member refid="structofbx_1_1_object_1a0c528f1e34f6c9287d2e389488d5dc39" prot="public" virt="non-virtual"><scope>ofbx::GeometryImpl</scope><name>getScalingPivot</name></member>
      <member refid="structofbx_1_1_object_1ace5bf5d0a7fd82d953d058df65d0c85e" prot="public" virt="non-virtual"><scope>ofbx::GeometryImpl</scope><name>getScene</name></member>
      <member refid="structofbx_1_1_geometry_impl_1a250745a2b516298a073a62ad5e112a1c" prot="public" virt="virtual"><scope>ofbx::GeometryImpl</scope><name>getSkin</name></member>
      <member refid="structofbx_1_1_geometry_impl_1a6a4f0b11f21421d52e737cd940c95c79" prot="public" virt="virtual"><scope>ofbx::GeometryImpl</scope><name>getTangents</name></member>
      <member refid="structofbx_1_1_geometry_impl_1aede58c8ff9b86e9eae0bf4156ca10eb9" prot="public" virt="virtual"><scope>ofbx::GeometryImpl</scope><name>getType</name></member>
      <member refid="structofbx_1_1_geometry_impl_1a28cd7168fe85e82bbfaa0cce41152995" prot="public" virt="virtual"><scope>ofbx::GeometryImpl</scope><name>getUVs</name></member>
      <member refid="structofbx_1_1_geometry_impl_1a85b146d09023c99ed6db1618ff070d33" prot="public" virt="virtual"><scope>ofbx::GeometryImpl</scope><name>getVertexCount</name></member>
      <member refid="structofbx_1_1_geometry_impl_1aaa8be49bcbb12e09ddb30657b8526599" prot="public" virt="virtual"><scope>ofbx::GeometryImpl</scope><name>getVertices</name></member>
      <member refid="structofbx_1_1_object_1aa9389f53bde91f138df49e48e0447b0b" prot="public" virt="non-virtual"><scope>ofbx::GeometryImpl</scope><name>id</name></member>
      <member refid="structofbx_1_1_object_1accbd64c9e29189111ece33831d0ffe91" prot="protected" virt="non-virtual"><scope>ofbx::GeometryImpl</scope><name>is_node</name></member>
      <member refid="structofbx_1_1_object_1ae214d85b80db101df3e1b8f46a837722" prot="public" virt="non-virtual"><scope>ofbx::GeometryImpl</scope><name>isNode</name></member>
      <member refid="structofbx_1_1_geometry_impl_1a2f6f5831774c32f8d4f6baa62bfd5851" prot="public" virt="non-virtual"><scope>ofbx::GeometryImpl</scope><name>materials</name></member>
      <member refid="structofbx_1_1_object_1a805b47b5743d377e8b5939ed8c42a5c4" prot="public" virt="non-virtual"><scope>ofbx::GeometryImpl</scope><name>name</name></member>
      <member refid="structofbx_1_1_object_1aa88660f2cb7b584b7feaf208e633863e" prot="public" virt="non-virtual"><scope>ofbx::GeometryImpl</scope><name>node_attribute</name></member>
      <member refid="structofbx_1_1_geometry_impl_1a60ff554b3ce2950dc41c1373c282ec2f" prot="public" virt="non-virtual"><scope>ofbx::GeometryImpl</scope><name>normals</name></member>
      <member refid="structofbx_1_1_object_1ad3852f1bb90c811e9d4b3775d1e40a14" prot="public" virt="non-virtual"><scope>ofbx::GeometryImpl</scope><name>Object</name></member>
      <member refid="structofbx_1_1_object_1a3baace736ac9954b9369faeb94dc4fc3" prot="public" virt="non-virtual"><scope>ofbx::GeometryImpl</scope><name>resolveObjectLink</name></member>
      <member refid="structofbx_1_1_object_1a0f01e46c82d9d3e0c5673d9f53c2b7fe" prot="public" virt="non-virtual"><scope>ofbx::GeometryImpl</scope><name>resolveObjectLink</name></member>
      <member refid="structofbx_1_1_object_1a7d9f54c95d761ca7b24a8b18b39ae39d" prot="public" virt="non-virtual"><scope>ofbx::GeometryImpl</scope><name>resolveObjectLink</name></member>
      <member refid="structofbx_1_1_object_1ab3c2a9ad2afc5436079603ca57c35ea0" prot="public" virt="non-virtual"><scope>ofbx::GeometryImpl</scope><name>resolveObjectLinkReverse</name></member>
      <member refid="structofbx_1_1_geometry_1aeb96634d863657bb751208d773545f2f" prot="public" virt="non-virtual"><scope>ofbx::GeometryImpl</scope><name>s_type</name></member>
      <member refid="structofbx_1_1_geometry_1a6e4af6a2e6b6e08008eb61c19284188c" prot="public" virt="non-virtual"><scope>ofbx::GeometryImpl</scope><name>s_uvs_max</name></member>
      <member refid="structofbx_1_1_object_1aa8b8ff6f452ed54e032c9e657ceb4f62" prot="protected" virt="non-virtual"><scope>ofbx::GeometryImpl</scope><name>scene</name></member>
      <member refid="structofbx_1_1_geometry_impl_1aa948ff73303d2405b252649baaa4694c" prot="public" virt="non-virtual"><scope>ofbx::GeometryImpl</scope><name>skin</name></member>
      <member refid="structofbx_1_1_geometry_impl_1aa401783ea37ce22213bd39b4346b083a" prot="public" virt="non-virtual"><scope>ofbx::GeometryImpl</scope><name>tangents</name></member>
      <member refid="structofbx_1_1_geometry_impl_1a1a1fb2396f3fe363c86bf29a661b62d6" prot="public" virt="non-virtual"><scope>ofbx::GeometryImpl</scope><name>to_new_vertices</name></member>
      <member refid="structofbx_1_1_geometry_impl_1a6a3335d54dc2612f7fdc40e2750cbd47" prot="public" virt="non-virtual"><scope>ofbx::GeometryImpl</scope><name>to_old_vertices</name></member>
      <member refid="structofbx_1_1_geometry_impl_1a96ae997cedef8544503da18d7e653093" prot="public" virt="non-virtual"><scope>ofbx::GeometryImpl</scope><name>triangulate</name></member>
      <member refid="structofbx_1_1_object_1a97a0620e9e5df23dcb848b63f2a471f5" prot="public" virt="non-virtual"><scope>ofbx::GeometryImpl</scope><name>Type</name></member>
      <member refid="structofbx_1_1_geometry_impl_1ae0cdf377f5d5e60dacf99ba437fce38a" prot="public" virt="non-virtual"><scope>ofbx::GeometryImpl</scope><name>uvs</name></member>
      <member refid="structofbx_1_1_geometry_impl_1ab81bd25139a1d629cec2592ecdd4479b" prot="public" virt="non-virtual"><scope>ofbx::GeometryImpl</scope><name>VertexDataMapping</name></member>
      <member refid="structofbx_1_1_geometry_impl_1a716dff4530d72430e52a7ac39943a373" prot="public" virt="non-virtual"><scope>ofbx::GeometryImpl</scope><name>vertices</name></member>
      <member refid="structofbx_1_1_object_1ae05540cc4f719253808195263452fe57" prot="public" virt="virtual"><scope>ofbx::GeometryImpl</scope><name>~Object</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
