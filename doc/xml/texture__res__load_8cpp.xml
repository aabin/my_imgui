<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9">
  <compounddef id="texture__res__load_8cpp" kind="file" language="C++">
    <compoundname>texture_res_load.cpp</compoundname>
    <includes refid="texture__res__load_8h" local="yes">texture_res_load.h</includes>
    <includes local="no">GL/gl3w.h</includes>
    <includes local="no">GLFW/glfw3.h</includes>
    <includes local="yes">SOIL.h</includes>
    <includes local="yes">texture.h</includes>
    <includes local="no">fstream</includes>
    <incdepgraph>
      <node id="1180">
        <label>res_internal.h</label>
        <link refid="res__internal_8h"/>
        <childnode refid="1181" relation="include">
        </childnode>
        <childnode refid="1178" relation="include">
        </childnode>
      </node>
      <node id="1179">
        <label>json/json.h</label>
      </node>
      <node id="1184">
        <label>SOIL.h</label>
      </node>
      <node id="1178">
        <label>string</label>
      </node>
      <node id="1175">
        <label>texture_res_load.h</label>
        <link refid="texture__res__load_8h"/>
        <childnode refid="1176" relation="include">
        </childnode>
        <childnode refid="1179" relation="include">
        </childnode>
        <childnode refid="1180" relation="include">
        </childnode>
      </node>
      <node id="1181">
        <label>map</label>
      </node>
      <node id="1183">
        <label>GLFW/glfw3.h</label>
      </node>
      <node id="1186">
        <label>fstream</label>
      </node>
      <node id="1174">
        <label>G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/texture_res_load.cpp</label>
        <link refid="texture_res_load.cpp"/>
        <childnode refid="1175" relation="include">
        </childnode>
        <childnode refid="1182" relation="include">
        </childnode>
        <childnode refid="1183" relation="include">
        </childnode>
        <childnode refid="1184" relation="include">
        </childnode>
        <childnode refid="1185" relation="include">
        </childnode>
        <childnode refid="1186" relation="include">
        </childnode>
      </node>
      <node id="1177">
        <label>vector</label>
      </node>
      <node id="1182">
        <label>GL/gl3w.h</label>
      </node>
      <node id="1185">
        <label>texture.h</label>
      </node>
      <node id="1176">
        <label>res_output.h</label>
        <link refid="res__output_8h"/>
        <childnode refid="1177" relation="include">
        </childnode>
        <childnode refid="1178" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="texture__res__load_8cpp_1a6442f9b3b14f51e8558c73573039e3ee" prot="public" static="no" mutable="no">
        <type>string</type>
        <definition>string g_cureent_project_file_path</definition>
        <argsstring></argsstring>
        <name>g_cureent_project_file_path</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/texture_res_load.cpp" line="38" column="1" bodyfile="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/main.cpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="texture__res__load_8cpp_1a6691362e9a4e9046320b19aabc3ffcee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool load_texture_info</definition>
        <argsstring>(res_texture_list &amp;rtlist, string &amp;str_txt_pack_file, string &amp;str_txt_data_file)</argsstring>
        <name>load_texture_info</name>
        <param>
          <type><ref refid="structres__texture__list" kindref="compound">res_texture_list</ref> &amp;</type>
          <declname>rtlist</declname>
        </param>
        <param>
          <type>string &amp;</type>
          <declname>str_txt_pack_file</declname>
        </param>
        <param>
          <type>string &amp;</type>
          <declname>str_txt_data_file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/texture_res_load.cpp" line="39" column="1" bodyfile="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/texture_res_load.cpp" bodystart="39" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="texture__res__load_8cpp_1aa238fe99553852ede9f2016e5b4a220a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void load_internal_texture_res</definition>
        <argsstring>(mtxt_internal &amp;mptxt, unsigned int txtresid, unsigned int txtformatid)</argsstring>
        <name>load_internal_texture_res</name>
        <param>
          <type><ref refid="res__internal_8h_1ad08aa474ba8b1bd7a7205a3c83194154" kindref="member">mtxt_internal</ref> &amp;</type>
          <declname>mptxt</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>txtresid</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>txtformatid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/texture_res_load.cpp" line="99" column="1" bodyfile="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/texture_res_load.cpp" bodystart="99" bodyend="156"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="texture__res__load_8h" kindref="compound">texture_res_load.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>IMGUI_WAYLAND</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../deps/glad/glad.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;GL/gl3w.h&gt;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;GLFW/glfw3.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;SOIL.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;texture.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="14"><highlight class="comment">field:</highlight></codeline>
<codeline lineno="15"><highlight class="comment">texture_res_list</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/>texture_pack_file</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/>texture_data_file</highlight></codeline>
<codeline lineno="18"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtexture__res__load_1a97f82e72cb5f9556761fec89d9f72662" kindref="member">texture_res_load::load_res_from_json</ref>(Value&amp;<sp/>jroot)</highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="res__output_8cpp_1a71767b9aa6ebf3c8383faab8b7212d38" kindref="member">g_cur_texture_id_index</ref><sp/>=<sp/>jroot[</highlight><highlight class="stringliteral">&quot;texture_id_index&quot;</highlight><highlight class="normal">].asInt();</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>Value&amp;<sp/>texture_res_list<sp/>=<sp/>jroot[</highlight><highlight class="stringliteral">&quot;texture_res_list&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>isize<sp/>=<sp/>texture_res_list.size();</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ix<sp/>=<sp/>0;<sp/>ix<sp/>&lt;<sp/>isize;ix++)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Value&amp;<sp/>junit<sp/>=<sp/>texture_res_list[ix];</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Value&amp;<sp/>texture_pack_file<sp/>=<sp/>junit[</highlight><highlight class="stringliteral">&quot;texture_pack_file&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Value&amp;<sp/>texture_data_file<sp/>=<sp/>junit[</highlight><highlight class="stringliteral">&quot;texture_data_file&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtexture__res__load_1a8266afed184069b5f86565209f9c74c6" kindref="member">_texture_res_tar</ref>.emplace_back();</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structres__texture__list" kindref="compound">res_texture_list</ref>&amp;<sp/>rtlist<sp/>=<sp/><ref refid="classtexture__res__load_1a8266afed184069b5f86565209f9c74c6" kindref="member">_texture_res_tar</ref>[ix];</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rtlist.<ref refid="structres__texture__list_1a001dbdf75fce4de679e387bf7acf4ff8" kindref="member">texture_pack_file</ref><sp/>=<sp/>texture_pack_file.asString();</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rtlist.<ref refid="structres__texture__list_1ad2cfffcd7eadf3c0e1241e35516a4474" kindref="member">texture_data_file</ref><sp/>=<sp/>texture_data_file.asString();</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="texture__res__load_8cpp_1a6691362e9a4e9046320b19aabc3ffcee" kindref="member">load_texture_info</ref>(rtlist,<sp/>rtlist.<ref refid="structres__texture__list_1a001dbdf75fce4de679e387bf7acf4ff8" kindref="member">texture_pack_file</ref>,<sp/>rtlist.<ref refid="structres__texture__list_1ad2cfffcd7eadf3c0e1241e35516a4474" kindref="member">texture_data_file</ref>);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="texture__res__load_8cpp_1a6442f9b3b14f51e8558c73573039e3ee" kindref="member">g_cureent_project_file_path</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="texture__res__load_8cpp_1a6691362e9a4e9046320b19aabc3ffcee" kindref="member">load_texture_info</ref>(<ref refid="structres__texture__list" kindref="compound">res_texture_list</ref>&amp;<sp/>rtlist,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>str_txt_pack_file,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>str_txt_data_file)</highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>str_texture_pack_file<sp/>=<sp/>g_cureent_project_file_path.substr(0,g_cureent_project_file_path.find_last_of(</highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">)+1);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>str_texture_pack_file<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;texture_res_list\\&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>str_texture_data_file<sp/>=<sp/>str_texture_pack_file;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>str_texture_pack_file<sp/>+=<sp/>str_txt_pack_file;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>str_texture_data_file<sp/>+=<sp/>str_txt_data_file;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>rtlist.<ref refid="structres__texture__list_1a4e9a381c0fe74cb6968f5f88e034f375" kindref="member">texture_id</ref><sp/>=<sp/>TextureHelper::load2DTexture(str_texture_pack_file.c_str(),<sp/>\</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>rtlist.texture_width,<sp/>rtlist.<ref refid="structres__texture__list_1aef0df35e456a54dd4676d1d901fdd2f5" kindref="member">texture_height</ref>,<sp/>GL_RGBA,<sp/>GL_RGBA,<sp/>SOIL_LOAD_RGBA);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rtlist.<ref refid="structres__texture__list_1a4e9a381c0fe74cb6968f5f88e034f375" kindref="member">texture_id</ref>==0)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>ifstream<sp/>fin;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>fin.open(str_texture_data_file);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fin.is_open())</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Reader<sp/>reader;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Value<sp/>jvalue;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reader.parse(fin,<sp/>jvalue,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Value&amp;<sp/>frames<sp/>=<sp/>jvalue[</highlight><highlight class="stringliteral">&quot;frames&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iisize<sp/>=<sp/>frames.size();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iisize<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iix<sp/>=<sp/>0;<sp/>iix<sp/>&lt;<sp/>iisize;<sp/>iix++)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Value&amp;<sp/>jfm_unit<sp/>=<sp/>frames[iix];</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Value&amp;<sp/>frame<sp/>=<sp/>jfm_unit[</highlight><highlight class="stringliteral">&quot;frame&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Value&amp;<sp/>filename<sp/>=<sp/>jfm_unit[</highlight><highlight class="stringliteral">&quot;filename&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rotated<sp/>=<sp/>jfm_unit[</highlight><highlight class="stringliteral">&quot;rotated&quot;</highlight><highlight class="normal">].asBool();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rtlist.<ref refid="structres__texture__list_1a45b8ee6e9f1cf326c610b7a1dff5dbea" kindref="member">vtexture_coordinates</ref>.emplace_back();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structres__texture__coordinate" kindref="compound">res_texture_coordinate</ref>&amp;<sp/>res_txt_cd<sp/>=<sp/>rtlist.<ref refid="structres__texture__list_1a45b8ee6e9f1cf326c610b7a1dff5dbea" kindref="member">vtexture_coordinates</ref>[iix];</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res_txt_cd.<ref refid="structres__texture__coordinate_1ac8e26b48a9b9684a17f500ccce610c93" kindref="member">_file_name</ref><sp/>=<sp/>filename.asString();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*rtlist.file_name_sets<sp/>+=<sp/>sfilename;</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rtlist.file_name_sets<sp/>+=<sp/>&quot;\0&quot;;*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res_txt_cd.<ref refid="structres__texture__coordinate_1a67b883e393a58533083ba5a5d0507ed3" kindref="member">_x0</ref><sp/>=<sp/>frame[</highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">].asInt();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res_txt_cd.<ref refid="structres__texture__coordinate_1a2f6571a6ea8ed79f71f2928feb0cd5ee" kindref="member">_y0</ref><sp/>=<sp/>frame[</highlight><highlight class="stringliteral">&quot;y&quot;</highlight><highlight class="normal">].asInt();</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res_txt_cd.<ref refid="structres__texture__coordinate_1a63321c72f78537e44c42c8698796261a" kindref="member">_x1</ref><sp/>=<sp/>frame[</highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">].asInt()<sp/>+<sp/>frame[</highlight><highlight class="stringliteral">&quot;w&quot;</highlight><highlight class="normal">].asInt()<sp/>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res_txt_cd.<ref refid="structres__texture__coordinate_1a7cf821ebb66d08a9db85b88b55f5120b" kindref="member">_y1</ref><sp/>=<sp/>frame[</highlight><highlight class="stringliteral">&quot;y&quot;</highlight><highlight class="normal">].asInt()<sp/>+<sp/>frame[</highlight><highlight class="stringliteral">&quot;h&quot;</highlight><highlight class="normal">].asInt()<sp/>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rotated)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res_txt_cd.<ref refid="structres__texture__coordinate_1a63321c72f78537e44c42c8698796261a" kindref="member">_x1</ref><sp/>=<sp/>frame[</highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">].asInt()+<sp/>frame[</highlight><highlight class="stringliteral">&quot;h&quot;</highlight><highlight class="normal">].asInt();<sp/><sp/>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res_txt_cd.<ref refid="structres__texture__coordinate_1a7cf821ebb66d08a9db85b88b55f5120b" kindref="member">_y1</ref><sp/>=<sp/>frame[</highlight><highlight class="stringliteral">&quot;y&quot;</highlight><highlight class="normal">].asInt()<sp/>+<sp/>frame[</highlight><highlight class="stringliteral">&quot;w&quot;</highlight><highlight class="normal">].asInt()<sp/>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fin.close();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="texture__res__load_8cpp_1aa238fe99553852ede9f2016e5b4a220a" kindref="member">load_internal_texture_res</ref>(<ref refid="res__internal_8h_1ad08aa474ba8b1bd7a7205a3c83194154" kindref="member">mtxt_internal</ref>&amp;<sp/>mptxt,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>txtresid,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>txtformatid)</highlight></codeline>
<codeline lineno="100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//MAKEINTRESOURCE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>HRSRC<sp/>hrTxt<sp/>=<sp/>FindResource(NULL,<sp/>MAKEINTRESOURCE(txtresid),<sp/></highlight><highlight class="stringliteral">&quot;PNG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NULL==hrTxt)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;fail<sp/>to<sp/>get<sp/>internal<sp/>txture<sp/>resource!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>DWORD<sp/>dwSize<sp/>=<sp/>SizeofResource(NULL,<sp/>hrTxt);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dwSize==0)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;this<sp/>size<sp/>of<sp/>internal<sp/>texture<sp/>resource<sp/>is<sp/>zero!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>HGLOBAL<sp/>htxtGlobal<sp/>=<sp/>LoadResource(NULL,<sp/>hrTxt);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>LPVOID<sp/>pbuffer<sp/>=<sp/>LockResource(htxtGlobal);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="res__internal_8cpp_1aabb77b85bd2f86be209a77975f259b10" kindref="member">g_txt_id_intl</ref><sp/>=<sp/>TextureHelper::transferMemory2Texture((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)pbuffer,dwSize,<sp/><ref refid="res__internal_8cpp_1a601a2af241dce644855831962740bd15" kindref="member">g_txt_width_intl</ref>,<sp/><ref refid="res__internal_8cpp_1a2e6ed982bb5cc9ee89cd3bb7e0c1fdda" kindref="member">g_txt_height_intl</ref>,<sp/>\</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GL_RGBA,<sp/>GL_RGBA,<sp/>SOIL_LOAD_RGBA);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>HRSRC<sp/>hrData<sp/>=<sp/>FindResource(NULL,<sp/>MAKEINTRESOURCE(txtformatid),<sp/></highlight><highlight class="stringliteral">&quot;dataformat&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NULL<sp/>==<sp/>hrData)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;fail<sp/>to<sp/>get<sp/>internal<sp/>txture<sp/>resource!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>DWORD<sp/>dwFSize<sp/>=<sp/>SizeofResource(NULL,<sp/>hrData);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dwFSize<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;this<sp/>size<sp/>of<sp/>internal<sp/>texture<sp/>resource<sp/>is<sp/>zero!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>HGLOBAL<sp/>hdataGb<sp/>=<sp/>LoadResource(NULL,<sp/>hrData);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>LPVOID<sp/>pdtBuffer<sp/>=<sp/>LockResource(hdataGb);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pdtBuffer)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>jdoc((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)pdtBuffer);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Reader<sp/>reader;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Value<sp/>jvalue;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reader.parse(jdoc,<sp/>jvalue,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Value&amp;<sp/>frames<sp/>=<sp/>jvalue[</highlight><highlight class="stringliteral">&quot;frames&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iisize<sp/>=<sp/>frames.size();</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iix<sp/>=<sp/>0;<sp/>iix<sp/>&lt;<sp/>iisize;<sp/>iix++)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Value&amp;<sp/>jfm_unit<sp/>=<sp/>frames[iix];</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Value&amp;<sp/>frame<sp/>=<sp/>jfm_unit[</highlight><highlight class="stringliteral">&quot;frame&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Value&amp;<sp/>filename<sp/>=<sp/>jfm_unit[</highlight><highlight class="stringliteral">&quot;filename&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>cname<sp/>=<sp/>filename.asString();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cname<sp/>=<sp/>cname.substr(0,<sp/>cname.find_last_of(</highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mptxt[cname]._x0<sp/>=<sp/>frame[</highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">].asInt();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mptxt[cname]._y0<sp/>=<sp/>frame[</highlight><highlight class="stringliteral">&quot;y&quot;</highlight><highlight class="normal">].asInt();</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mptxt[cname]._x1<sp/>=<sp/>frame[</highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">].asInt()<sp/>+<sp/>frame[</highlight><highlight class="stringliteral">&quot;w&quot;</highlight><highlight class="normal">].asInt();</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mptxt[cname]._y1<sp/>=<sp/>frame[</highlight><highlight class="stringliteral">&quot;y&quot;</highlight><highlight class="normal">].asInt()<sp/>+<sp/>frame[</highlight><highlight class="stringliteral">&quot;h&quot;</highlight><highlight class="normal">].asInt();</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/texture_res_load.cpp"/>
  </compounddef>
</doxygen>
