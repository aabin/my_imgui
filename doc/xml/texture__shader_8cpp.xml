<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9">
  <compounddef id="texture__shader_8cpp" kind="file" language="C++">
    <compoundname>texture_shader.cpp</compoundname>
    <includes refid="texture__shader_8h" local="yes">texture_shader.h</includes>
    <includes refid="control__common__def_8h" local="yes">control_common_def.h</includes>
    <includes local="no">glm.hpp</includes>
    <includes local="no">gtc/matrix_transform.hpp</includes>
    <includes local="no">gtc/type_ptr.hpp</includes>
    <includes local="yes">SOIL.h</includes>
    <includes local="yes">texture.h</includes>
    <includes refid="camera_8h" local="yes">camera.h</includes>
    <incdepgraph>
      <node id="1219">
        <label>camera.h</label>
        <link refid="camera_8h"/>
        <childnode refid="1220" relation="include">
        </childnode>
        <childnode refid="1221" relation="include">
        </childnode>
        <childnode refid="1211" relation="include">
        </childnode>
        <childnode refid="1208" relation="include">
        </childnode>
        <childnode refid="1209" relation="include">
        </childnode>
        <childnode refid="1222" relation="include">
        </childnode>
        <childnode refid="1223" relation="include">
        </childnode>
      </node>
      <node id="1223">
        <label>iomanip</label>
      </node>
      <node id="1207">
        <label>functional</label>
      </node>
      <node id="1204">
        <label>imgui_internal.h</label>
      </node>
      <node id="1217">
        <label>SOIL.h</label>
      </node>
      <node id="1214">
        <label>string</label>
      </node>
      <node id="1206">
        <label>map</label>
      </node>
      <node id="1210">
        <label>gtc/type_ptr.hpp</label>
      </node>
      <node id="1221">
        <label>fstream</label>
      </node>
      <node id="1215">
        <label>json.h</label>
      </node>
      <node id="1200">
        <label>G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/texture_shader.cpp</label>
        <link refid="texture_shader.cpp"/>
        <childnode refid="1201" relation="include">
        </childnode>
        <childnode refid="1213" relation="include">
        </childnode>
        <childnode refid="1208" relation="include">
        </childnode>
        <childnode refid="1209" relation="include">
        </childnode>
        <childnode refid="1210" relation="include">
        </childnode>
        <childnode refid="1217" relation="include">
        </childnode>
        <childnode refid="1218" relation="include">
        </childnode>
        <childnode refid="1219" relation="include">
        </childnode>
      </node>
      <node id="1209">
        <label>gtc/matrix_transform.hpp</label>
      </node>
      <node id="1212">
        <label>fab.h</label>
      </node>
      <node id="1205">
        <label>vector</label>
      </node>
      <node id="1213">
        <label>control_common_def.h</label>
        <link refid="control__common__def_8h"/>
        <childnode refid="1203" relation="include">
        </childnode>
        <childnode refid="1204" relation="include">
        </childnode>
        <childnode refid="1205" relation="include">
        </childnode>
        <childnode refid="1214" relation="include">
        </childnode>
        <childnode refid="1215" relation="include">
        </childnode>
        <childnode refid="1216" relation="include">
        </childnode>
      </node>
      <node id="1208">
        <label>glm.hpp</label>
      </node>
      <node id="1203">
        <label>imgui.h</label>
      </node>
      <node id="1220">
        <label>iostream</label>
      </node>
      <node id="1222">
        <label>gtx/string_cast.hpp</label>
      </node>
      <node id="1211">
        <label>GL/gl3w.h</label>
      </node>
      <node id="1216">
        <label>algorithm</label>
      </node>
      <node id="1201">
        <label>texture_shader.h</label>
        <link refid="texture__shader_8h"/>
        <childnode refid="1202" relation="include">
        </childnode>
      </node>
      <node id="1218">
        <label>texture.h</label>
      </node>
      <node id="1202">
        <label>basic3d.h</label>
        <link refid="basic3d_8h"/>
        <childnode refid="1203" relation="include">
        </childnode>
        <childnode refid="1204" relation="include">
        </childnode>
        <childnode refid="1205" relation="include">
        </childnode>
        <childnode refid="1206" relation="include">
        </childnode>
        <childnode refid="1207" relation="include">
        </childnode>
        <childnode refid="1208" relation="include">
        </childnode>
        <childnode refid="1209" relation="include">
        </childnode>
        <childnode refid="1210" relation="include">
        </childnode>
        <childnode refid="1211" relation="include">
        </childnode>
        <childnode refid="1212" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="texture__shader_8cpp_1ae398f4507d7e86b3391203da7667c05f" prot="public" static="no">
        <name>CHECK_SHADER_STATUS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/texture_shader.cpp" line="41" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="texture__shader_8cpp_1a1893d366a6534fdaf53fe94c1c412f0e" prot="public" static="yes" mutable="no">
        <type>const GLchar *</type>
        <definition>const GLchar* ts_vertexSource</definition>
        <argsstring></argsstring>
        <name>ts_vertexSource</name>
        <initializer>= R&quot;glsl(
    attribute vec3 position;
    attribute vec2 textcoord;
    attribute vec3 normal;

    varying vec2 Textcoord;
	uniform mat4 proj;
	uniform mat4 view;
	uniform mat4 model;
	void <ref refid="main__app_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref>()
	{
		 gl_Position = proj * view * model * vec4(position, 1.0);
		Textcoord = textcoord;
	}
)glsl&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/texture_shader.cpp" line="10" column="1" bodyfile="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/texture_shader.cpp" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="texture__shader_8cpp_1ace718f1fca0eda3b9dde22d57c8a435f" prot="public" static="yes" mutable="no">
        <type>const GLchar *</type>
        <definition>const GLchar* ts_fragmentSource</definition>
        <argsstring></argsstring>
        <name>ts_fragmentSource</name>
        <initializer>= R&quot;glsl(
	varying vec2 Textcoord;
	uniform sampler2D text;
	void <ref refid="main__app_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref>()
	{
		gl_FragColor = texture(text, Textcoord);
	}
)glsl&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/texture_shader.cpp" line="25" column="1" bodyfile="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/texture_shader.cpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="texture__shader_8h" kindref="compound">texture_shader.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="control__common__def_8h" kindref="compound">control_common_def.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;glm.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gtc/matrix_transform.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gtc/type_ptr.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;SOIL.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;texture.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="camera_8h" kindref="compound">camera.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Shader<sp/>sources</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLchar*<sp/><ref refid="texture__shader_8cpp_1a1893d366a6534fdaf53fe94c1c412f0e" kindref="member">ts_vertexSource</ref><sp/>=<sp/>R</highlight><highlight class="stringliteral">&quot;glsl(</highlight></codeline>
<codeline lineno="11"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>attribute<sp/>vec3<sp/>position;</highlight></codeline>
<codeline lineno="12"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>attribute<sp/>vec2<sp/>textcoord;</highlight></codeline>
<codeline lineno="13"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>attribute<sp/>vec3<sp/>normal;</highlight></codeline>
<codeline lineno="14"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="15"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>varying<sp/>vec2<sp/>Textcoord;</highlight></codeline>
<codeline lineno="16"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>uniform<sp/>mat4<sp/>proj;</highlight></codeline>
<codeline lineno="17"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>uniform<sp/>mat4<sp/>view;</highlight></codeline>
<codeline lineno="18"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>uniform<sp/>mat4<sp/>model;</highlight></codeline>
<codeline lineno="19"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>void<sp/>main()</highlight></codeline>
<codeline lineno="20"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gl_Position<sp/>=<sp/>proj<sp/>*<sp/>view<sp/>*<sp/>model<sp/>*<sp/>vec4(position,<sp/>1.0);</highlight></codeline>
<codeline lineno="22"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Textcoord<sp/>=<sp/>textcoord;</highlight></codeline>
<codeline lineno="23"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="stringliteral">)glsl&quot;;</highlight></codeline>
<codeline lineno="25"><highlight class="stringliteral"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLchar*<sp/><ref refid="texture__shader_8cpp_1ace718f1fca0eda3b9dde22d57c8a435f" kindref="member">ts_fragmentSource</ref><sp/>=<sp/>R</highlight><highlight class="stringliteral">&quot;glsl(</highlight></codeline>
<codeline lineno="26"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>varying<sp/>vec2<sp/>Textcoord;</highlight></codeline>
<codeline lineno="27"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>uniform<sp/>sampler2D<sp/>text;</highlight></codeline>
<codeline lineno="28"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>void<sp/>main()</highlight></codeline>
<codeline lineno="29"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gl_FragColor<sp/>=<sp/>texture(text,<sp/>Textcoord);</highlight></codeline>
<codeline lineno="31"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="stringliteral">)glsl&quot;;</highlight></codeline>
<codeline lineno="33"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="34"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="35"><highlight class="stringliteral"><ref refid="classtexture__shader_1a6202ab0844403533c9ea22aa903bd862" kindref="member">texture_shader::texture_shader</ref>()</highlight></codeline>
<codeline lineno="36"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="37"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//vertex<sp/>shader</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classbasic__shader_1a27682af90bc47b6154cbcc03eb535ddb" kindref="member">_vertex_shader</ref><sp/>=<sp/>glCreateShader(GL_VERTEX_SHADER);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>glShaderSource(<ref refid="classbasic__shader_1a27682af90bc47b6154cbcc03eb535ddb" kindref="member">_vertex_shader</ref>,<sp/>1,<sp/>&amp;<ref refid="texture__shader_8cpp_1a1893d366a6534fdaf53fe94c1c412f0e" kindref="member">ts_vertexSource</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>glCompileShader(<ref refid="classbasic__shader_1a27682af90bc47b6154cbcc03eb535ddb" kindref="member">_vertex_shader</ref>);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CHECK_SHADER_STATUS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CHECK_SHADER_STATUS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>GLint<sp/>status;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>glGetShaderiv(<ref refid="classbasic__shader_1a27682af90bc47b6154cbcc03eb535ddb" kindref="member">_vertex_shader</ref>,<sp/>GL_COMPILE_STATUS,<sp/>&amp;status);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>!=<sp/>GL_TRUE)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[512];</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glGetShaderInfoLog(<ref refid="classbasic__shader_1a27682af90bc47b6154cbcc03eb535ddb" kindref="member">_vertex_shader</ref>,<sp/>512,<sp/>NULL,<sp/>buffer);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;shader<sp/>error:%s\n&quot;</highlight><highlight class="normal">,<sp/>buffer);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//fragment<sp/>shader</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classbasic__shader_1a8cee4ec6ec0ec6ae55433c78686fd6a1" kindref="member">_fragment_shader</ref><sp/>=<sp/>glCreateShader(GL_FRAGMENT_SHADER);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>glShaderSource(<ref refid="classbasic__shader_1a8cee4ec6ec0ec6ae55433c78686fd6a1" kindref="member">_fragment_shader</ref>,<sp/>1,<sp/>&amp;<ref refid="texture__shader_8cpp_1ace718f1fca0eda3b9dde22d57c8a435f" kindref="member">ts_fragmentSource</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>glCompileShader(<ref refid="classbasic__shader_1a8cee4ec6ec0ec6ae55433c78686fd6a1" kindref="member">_fragment_shader</ref>);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CHECK_SHADER_STATUS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>glGetShaderiv(<ref refid="classbasic__shader_1a27682af90bc47b6154cbcc03eb535ddb" kindref="member">_vertex_shader</ref>,<sp/>GL_COMPILE_STATUS,<sp/>&amp;status);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>!=<sp/>GL_TRUE)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[512];</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glGetShaderInfoLog(<ref refid="classbasic__shader_1a27682af90bc47b6154cbcc03eb535ddb" kindref="member">_vertex_shader</ref>,<sp/>512,<sp/>NULL,<sp/>buffer);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;shader2<sp/>error:%s\n&quot;</highlight><highlight class="normal">,<sp/>buffer);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//link</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classbasic__shader_1a1fbe6764c4c5161e1be62c61724c1915" kindref="member">_shader_program_id</ref><sp/>=<sp/>glCreateProgram();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>glAttachShader(<ref refid="classbasic__shader_1a1fbe6764c4c5161e1be62c61724c1915" kindref="member">_shader_program_id</ref>,<sp/><ref refid="classbasic__shader_1a27682af90bc47b6154cbcc03eb535ddb" kindref="member">_vertex_shader</ref>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>glAttachShader(<ref refid="classbasic__shader_1a1fbe6764c4c5161e1be62c61724c1915" kindref="member">_shader_program_id</ref>,<sp/><ref refid="classbasic__shader_1a8cee4ec6ec0ec6ae55433c78686fd6a1" kindref="member">_fragment_shader</ref>);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindFragDataLocation(<ref refid="classbasic__shader_1a1fbe6764c4c5161e1be62c61724c1915" kindref="member">_shader_program_id</ref>,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;outColor&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>glLinkProgram(<ref refid="classbasic__shader_1a1fbe6764c4c5161e1be62c61724c1915" kindref="member">_shader_program_id</ref>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>glUseProgram(<ref refid="classbasic__shader_1a1fbe6764c4c5161e1be62c61724c1915" kindref="member">_shader_program_id</ref>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>GLint<sp/>i;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>GLint<sp/>count;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>GLint<sp/>size;<sp/></highlight><highlight class="comment">//<sp/>size<sp/>of<sp/>the<sp/>variable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>GLenum<sp/>type;<sp/></highlight><highlight class="comment">//<sp/>type<sp/>of<sp/>the<sp/>variable<sp/>(float,<sp/>vec3<sp/>or<sp/>mat4,<sp/>etc)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLsizei<sp/>bufSize<sp/>=<sp/>16;<sp/></highlight><highlight class="comment">//<sp/>maximum<sp/>name<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>GLchar<sp/>name[bufSize];<sp/></highlight><highlight class="comment">//<sp/>variable<sp/>name<sp/>in<sp/>GLSL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>GLsizei<sp/>length;<sp/></highlight><highlight class="comment">//<sp/>name<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>glGetProgramiv(<ref refid="classbasic__shader_1a1fbe6764c4c5161e1be62c61724c1915" kindref="member">_shader_program_id</ref>,<sp/>GL_ACTIVE_ATTRIBUTES,<sp/>&amp;count);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Active<sp/>Attributes:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>count);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>count;<sp/>i++)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glGetActiveAttrib(<ref refid="classbasic__shader_1a1fbe6764c4c5161e1be62c61724c1915" kindref="member">_shader_program_id</ref>,<sp/>(GLuint)i,<sp/>bufSize,<sp/>&amp;length,<sp/>&amp;size,<sp/>&amp;type,<sp/>name);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Attribute<sp/>#%d<sp/>Type:<sp/>%u<sp/>Name:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>i,<sp/>type,<sp/>name);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>glGetProgramiv(<ref refid="classbasic__shader_1a1fbe6764c4c5161e1be62c61724c1915" kindref="member">_shader_program_id</ref>,<sp/>GL_ACTIVE_UNIFORMS,<sp/>&amp;count);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Active<sp/>Uniforms:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>count);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>count;<sp/>i++)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glGetActiveUniform(<ref refid="classbasic__shader_1a1fbe6764c4c5161e1be62c61724c1915" kindref="member">_shader_program_id</ref>,<sp/>(GLuint)i,<sp/>bufSize,<sp/>&amp;length,<sp/>&amp;size,<sp/>&amp;type,<sp/>name);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Uniform<sp/>#%d<sp/>Type:<sp/>%u<sp/>Name:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>i,<sp/>type,<sp/>name);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classbasic__shader_1a2f0c20e90299e2b9a295a01c14ead8c5" kindref="member">_mattr_list</ref>[</highlight><highlight class="stringliteral">&quot;position&quot;</highlight><highlight class="normal">]<sp/>=<sp/><ref refid="structshader__attribute" kindref="compound">shader_attribute</ref>(<ref refid="basic3d_8h_1a252706f7952dafcfc760e178d156f100adf75c0a43e8a435979fda2da1dc6abee" kindref="member">en_attr_vec3</ref>,<sp/>glGetAttribLocation(<ref refid="classbasic__shader_1a1fbe6764c4c5161e1be62c61724c1915" kindref="member">_shader_program_id</ref>,<sp/></highlight><highlight class="stringliteral">&quot;position&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classbasic__shader_1a2f0c20e90299e2b9a295a01c14ead8c5" kindref="member">_mattr_list</ref>[</highlight><highlight class="stringliteral">&quot;textcoord&quot;</highlight><highlight class="normal">]<sp/>=<sp/><ref refid="structshader__attribute" kindref="compound">shader_attribute</ref>(<ref refid="basic3d_8h_1a252706f7952dafcfc760e178d156f100a229dc986d7d4ffd8df9078ab02362824" kindref="member">en_attr_vec2</ref>,<sp/>glGetAttribLocation(<ref refid="classbasic__shader_1a1fbe6764c4c5161e1be62c61724c1915" kindref="member">_shader_program_id</ref>,<sp/></highlight><highlight class="stringliteral">&quot;textcoord&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classbasic__shader_1a2f0c20e90299e2b9a295a01c14ead8c5" kindref="member">_mattr_list</ref>[</highlight><highlight class="stringliteral">&quot;normal&quot;</highlight><highlight class="normal">]<sp/>=<sp/><ref refid="structshader__attribute" kindref="compound">shader_attribute</ref>(<ref refid="basic3d_8h_1a252706f7952dafcfc760e178d156f100adf75c0a43e8a435979fda2da1dc6abee" kindref="member">en_attr_vec3</ref>,<sp/>glGetAttribLocation(<ref refid="classbasic__shader_1a1fbe6764c4c5161e1be62c61724c1915" kindref="member">_shader_program_id</ref>,<sp/></highlight><highlight class="stringliteral">&quot;normal&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>GLuint<sp/>_model<sp/>=<sp/>glGetUniformLocation(<ref refid="classbasic__shader_1a1fbe6764c4c5161e1be62c61724c1915" kindref="member">_shader_program_id</ref>,<sp/></highlight><highlight class="stringliteral">&quot;model&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>glm::mat4<sp/>model;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>model=<sp/>glm::scale(model,<sp/>glm::vec3(0.01f,<sp/>0.01f,<sp/>0.01f));</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>glUniformMatrix4fv(_model,<sp/>1,<sp/>GL_FALSE,<sp/>glm::value_ptr(model));</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classbasic__shader_1a1c0249976b256a790b76494dea512ecc" kindref="member">_munf_list</ref>[</highlight><highlight class="stringliteral">&quot;model&quot;</highlight><highlight class="normal">]<sp/>=<sp/><ref refid="structshader__uniform" kindref="compound">shader_uniform</ref>(<ref refid="basic3d_8h_1a7198ef74de6af51e50187abc6939a94eac8a971015931ba9ad0b8459e2d99752c" kindref="member">en_unf_mat4</ref>,<sp/>_model);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//GL_FLOAT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>GLuint<sp/>_view<sp/>=<sp/>glGetUniformLocation(<ref refid="classbasic__shader_1a1fbe6764c4c5161e1be62c61724c1915" kindref="member">_shader_program_id</ref>,<sp/></highlight><highlight class="stringliteral">&quot;view&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>glm::mat4<sp/>view<sp/>=<sp/>glm::lookAt(</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm::vec3(0.0f,<sp/>0.0f,<sp/>2.0f),</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm::vec3(0.0f,<sp/>0.0f,<sp/>1.0f),</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm::vec3(0.0f,<sp/>1.0f,<sp/>0.0f)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>glUniformMatrix4fv(_view,<sp/>1,<sp/>GL_FALSE,<sp/>glm::value_ptr(view));</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classbasic__shader_1a1c0249976b256a790b76494dea512ecc" kindref="member">_munf_list</ref>[</highlight><highlight class="stringliteral">&quot;view&quot;</highlight><highlight class="normal">]<sp/>=<sp/><ref refid="structshader__uniform" kindref="compound">shader_uniform</ref>(<ref refid="basic3d_8h_1a7198ef74de6af51e50187abc6939a94eac8a971015931ba9ad0b8459e2d99752c" kindref="member">en_unf_mat4</ref>,<sp/>_view);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>GLuint<sp/>_proj<sp/>=<sp/>glGetUniformLocation(<ref refid="classbasic__shader_1a1fbe6764c4c5161e1be62c61724c1915" kindref="member">_shader_program_id</ref>,<sp/></highlight><highlight class="stringliteral">&quot;proj&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>glm::mat4<sp/>proj<sp/>=<sp/>glm::perspective(glm::radians(60.0f),<sp/>800.0f<sp/>/<sp/>600.0f,<sp/>1.0f,<sp/>100.0f);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>glUniformMatrix4fv(_proj,<sp/>1,<sp/>GL_FALSE,<sp/>glm::value_ptr(proj));</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classbasic__shader_1a1c0249976b256a790b76494dea512ecc" kindref="member">_munf_list</ref>[</highlight><highlight class="stringliteral">&quot;proj&quot;</highlight><highlight class="normal">]<sp/>=<sp/><ref refid="structshader__uniform" kindref="compound">shader_uniform</ref>(<ref refid="basic3d_8h_1a7198ef74de6af51e50187abc6939a94eac8a971015931ba9ad0b8459e2d99752c" kindref="member">en_unf_mat4</ref>,<sp/>_proj);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classbasic__shader_1a1c0249976b256a790b76494dea512ecc" kindref="member">_munf_list</ref>[</highlight><highlight class="stringliteral">&quot;text&quot;</highlight><highlight class="normal">]<sp/>=<sp/><ref refid="structshader__uniform" kindref="compound">shader_uniform</ref>(<ref refid="basic3d_8h_1a7198ef74de6af51e50187abc6939a94ea62ad79674f07579d8aa15da252162bc3" kindref="member">en_unf_tex</ref>,<sp/>glGetUniformLocation(<ref refid="classbasic__shader_1a1fbe6764c4c5161e1be62c61724c1915" kindref="member">_shader_program_id</ref>,<sp/></highlight><highlight class="stringliteral">&quot;text&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/texture_shader.cpp"/>
  </compounddef>
</doxygen>
