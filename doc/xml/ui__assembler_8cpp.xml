<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9">
  <compounddef id="ui__assembler_8cpp" kind="file" language="C++">
    <compoundname>ui_assembler.cpp</compoundname>
    <includes refid="ui__assembler_8h" local="yes">ui_assembler.h</includes>
    <includes local="no">fstream</includes>
    <includes refid="texture__res__load_8h" local="yes">texture_res_load.h</includes>
    <includes refid="af__shader_8h" local="yes">af_shader.h</includes>
    <includes refid="material_8h" local="yes">material.h</includes>
    <incdepgraph>
      <node id="1259">
        <label>glm/gtx/norm.hpp</label>
      </node>
      <node id="1255">
        <label>functional</label>
      </node>
      <node id="1252">
        <label>res_internal.h</label>
        <link refid="res__internal_8h"/>
        <childnode refid="1253" relation="include">
        </childnode>
        <childnode refid="1245" relation="include">
        </childnode>
      </node>
      <node id="1251">
        <label>json/json.h</label>
      </node>
      <node id="1243">
        <label>imgui_internal.h</label>
      </node>
      <node id="1254">
        <label>af_shader.h</label>
        <link refid="af__shader_8h"/>
        <childnode refid="1244" relation="include">
        </childnode>
        <childnode refid="1253" relation="include">
        </childnode>
        <childnode refid="1255" relation="include">
        </childnode>
        <childnode refid="1256" relation="include">
        </childnode>
        <childnode refid="1257" relation="include">
        </childnode>
        <childnode refid="1258" relation="include">
        </childnode>
        <childnode refid="1259" relation="include">
        </childnode>
        <childnode refid="1260" relation="include">
        </childnode>
        <childnode refid="1261" relation="include">
        </childnode>
      </node>
      <node id="1264">
        <label>stdexcept</label>
      </node>
      <node id="1245">
        <label>string</label>
      </node>
      <node id="1249">
        <label>texture_res_load.h</label>
        <link refid="texture__res__load_8h"/>
        <childnode refid="1250" relation="include">
        </childnode>
        <childnode refid="1251" relation="include">
        </childnode>
        <childnode refid="1252" relation="include">
        </childnode>
      </node>
      <node id="1253">
        <label>map</label>
      </node>
      <node id="1263">
        <label>shader_uf.h</label>
        <link refid="shader__uf_8h"/>
        <childnode refid="1260" relation="include">
        </childnode>
        <childnode refid="1251" relation="include">
        </childnode>
        <childnode refid="1264" relation="include">
        </childnode>
        <childnode refid="1245" relation="include">
        </childnode>
        <childnode refid="1261" relation="include">
        </childnode>
      </node>
      <node id="1258">
        <label>gtc/type_ptr.hpp</label>
      </node>
      <node id="1248">
        <label>fstream</label>
      </node>
      <node id="1246">
        <label>json.h</label>
      </node>
      <node id="1257">
        <label>gtc/matrix_transform.hpp</label>
      </node>
      <node id="1261">
        <label>fab.h</label>
      </node>
      <node id="1244">
        <label>vector</label>
      </node>
      <node id="1241">
        <label>control_common_def.h</label>
        <link refid="control__common__def_8h"/>
        <childnode refid="1242" relation="include">
        </childnode>
        <childnode refid="1243" relation="include">
        </childnode>
        <childnode refid="1244" relation="include">
        </childnode>
        <childnode refid="1245" relation="include">
        </childnode>
        <childnode refid="1246" relation="include">
        </childnode>
        <childnode refid="1247" relation="include">
        </childnode>
      </node>
      <node id="1256">
        <label>glm.hpp</label>
      </node>
      <node id="1242">
        <label>imgui.h</label>
      </node>
      <node id="1240">
        <label>ui_assembler.h</label>
        <link refid="ui__assembler_8h"/>
        <childnode refid="1241" relation="include">
        </childnode>
      </node>
      <node id="1260">
        <label>GL/gl3w.h</label>
      </node>
      <node id="1247">
        <label>algorithm</label>
      </node>
      <node id="1262">
        <label>material.h</label>
        <link refid="material_8h"/>
        <childnode refid="1254" relation="include">
        </childnode>
        <childnode refid="1263" relation="include">
        </childnode>
      </node>
      <node id="1239">
        <label>G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/ui_assembler.cpp</label>
        <link refid="ui_assembler.cpp"/>
        <childnode refid="1240" relation="include">
        </childnode>
        <childnode refid="1248" relation="include">
        </childnode>
        <childnode refid="1249" relation="include">
        </childnode>
        <childnode refid="1254" relation="include">
        </childnode>
        <childnode refid="1262" relation="include">
        </childnode>
      </node>
      <node id="1250">
        <label>res_output.h</label>
        <link refid="res__output_8h"/>
        <childnode refid="1244" relation="include">
        </childnode>
        <childnode refid="1245" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ui__assembler_8h" kindref="compound">ui_assembler.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="texture__res__load_8h" kindref="compound">texture_res_load.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="af__shader_8h" kindref="compound">af_shader.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="material_8h" kindref="compound">material.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classui__assembler_1a6b07aea8790e551ad248348d73653806" kindref="member">ui_assembler::load_ui_component_from_file</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>file_path)</highlight></codeline>
<codeline lineno="7"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>ifstream<sp/>fin;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>fin.open(file_path);</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fin.is_open())</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Reader<sp/>reader;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Value<sp/>jroot;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reader.parse(fin,<sp/>jroot,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Value<sp/>screenw<sp/>=<sp/>jroot[</highlight><highlight class="stringliteral">&quot;screenw&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Value<sp/>screenh<sp/>=<sp/>jroot[</highlight><highlight class="stringliteral">&quot;screenh&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!screenw.isNull())</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classbase__ui__component_1a1027bcda32d3f479b6d14c0cbbcc184b" kindref="member">base_ui_component::screenw</ref><sp/>=<sp/>screenw.asDouble();</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classbase__ui__component_1a1027bcda32d3f479b6d14c0cbbcc184b" kindref="member">base_ui_component::screenw</ref><sp/>=<sp/>2000.0f;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!screenh.isNull())</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classbase__ui__component_1aca508bf254f0b9c55d29c68c8249e2d3" kindref="member">base_ui_component::screenh</ref><sp/>=<sp/>screenh.asDouble();</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classbase__ui__component_1aca508bf254f0b9c55d29c68c8249e2d3" kindref="member">base_ui_component::screenh</ref><sp/>=<sp/>1000.0f;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtexture__res__load" kindref="compound">texture_res_load</ref><sp/>tresload(<ref refid="res__output_8cpp_1a7dfb9d14c70eaac507d4bf4cae7e7360" kindref="member">g_vres_texture_list</ref>);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tresload.load_res_from_json(jroot);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Value&amp;<sp/>shader_list<sp/>=<sp/>jroot[</highlight><highlight class="stringliteral">&quot;shader_list&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>isize<sp/>=<sp/>shader_list.size();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UInt<sp/>ix<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ix<sp/>=<sp/>0;<sp/>ix<sp/>&lt;<sp/>isize;<sp/>ix++)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Value&amp;<sp/>shd_unit<sp/>=<sp/>shader_list[ix];</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>vs_code<sp/>=<sp/>shd_unit[</highlight><highlight class="stringliteral">&quot;vs_code&quot;</highlight><highlight class="normal">].asString();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>fs_code<sp/>=<sp/>shd_unit[</highlight><highlight class="stringliteral">&quot;fs_code&quot;</highlight><highlight class="normal">].asString();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shared_ptr&lt;af_shader&gt;<sp/>pshd<sp/>=<sp/>make_shared&lt;af_shader&gt;(vs_code.c_str(),<sp/>fs_code.c_str());</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pshd-&gt;_vs_name<sp/>=<sp/>shd_unit[</highlight><highlight class="stringliteral">&quot;vs_name&quot;</highlight><highlight class="normal">].asString();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pshd-&gt;_fs_name<sp/>=<sp/>shd_unit[</highlight><highlight class="stringliteral">&quot;fs_name&quot;</highlight><highlight class="normal">].asString();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pshd-&gt;set_name(shd_unit[</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">].asString());</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="af__shader_8cpp_1af0ab9139334e7f9f0886c7af66dd1d7c" kindref="member">g_af_shader_list</ref>[shd_unit[</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">].asString()]<sp/>=<sp/>pshd;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Value&amp;<sp/>material_list<sp/>=<sp/>jroot[</highlight><highlight class="stringliteral">&quot;material_list&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isize<sp/>=<sp/>material_list.size();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ix<sp/>=<sp/>0;<sp/>ix<sp/>&lt;<sp/>isize;<sp/>ix++)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Value&amp;<sp/>mtl_unit<sp/>=<sp/>material_list[ix];</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shared_ptr&lt;material&gt;<sp/>pmtl<sp/>=<sp/>make_shared&lt;material&gt;();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pmtl-&gt;init_from_json(mtl_unit);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="material_8cpp_1a7ec3a5ea4800c713f34193465d7d5630" kindref="member">g_material_list</ref>[pmtl-&gt;get_name()]=pmtl;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classui__assembler_1a893b9a2797afc05c70d12ae9b4a597e8" kindref="member">_root</ref>.<ref refid="classbase__ui__component_1ac6d1f4a871c317070fcab2104f06b88d" kindref="member">init_from_json</ref>(jroot);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fin.close();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;invalid<sp/>file_path:%s\n&quot;</highlight><highlight class="normal">,<sp/>file_path);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classui__assembler_1a69549a7e3a6136c9dc71ff6b1444d8e2" kindref="member">ui_assembler::output_ui_component_to_file</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>file_path)</highlight></codeline>
<codeline lineno="74"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>ofstream<sp/>fout;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>fout.open(file_path);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>Value<sp/>jroot(objectValue);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>jroot[</highlight><highlight class="stringliteral">&quot;screenw&quot;</highlight><highlight class="normal">]<sp/>=<sp/><ref refid="classbase__ui__component_1a1027bcda32d3f479b6d14c0cbbcc184b" kindref="member">base_ui_component::screenw</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>jroot[</highlight><highlight class="stringliteral">&quot;screenh&quot;</highlight><highlight class="normal">]<sp/>=<sp/><ref refid="classbase__ui__component_1aca508bf254f0b9c55d29c68c8249e2d3" kindref="member">base_ui_component::screenh</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>Value<sp/>jtexture(arrayValue);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>reslist:<ref refid="res__output_8cpp_1a7dfb9d14c70eaac507d4bf4cae7e7360" kindref="member">g_vres_texture_list</ref>)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Value<sp/>jtext_res_unit(objectValue);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jtext_res_unit[</highlight><highlight class="stringliteral">&quot;texture_pack_file&quot;</highlight><highlight class="normal">]<sp/>=<sp/>reslist.texture_pack_file;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jtext_res_unit[</highlight><highlight class="stringliteral">&quot;texture_data_file&quot;</highlight><highlight class="normal">]<sp/>=<sp/>reslist.texture_data_file;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jtexture.append(jtext_res_unit);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>jroot[</highlight><highlight class="stringliteral">&quot;texture_res_list&quot;</highlight><highlight class="normal">]<sp/>=<sp/>jtexture;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>Value<sp/>jshader(arrayValue);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>shd_ut<sp/>:<sp/><ref refid="af__shader_8cpp_1af0ab9139334e7f9f0886c7af66dd1d7c" kindref="member">g_af_shader_list</ref>)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Value<sp/>jshd_unit(objectValue);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>sd_name<sp/>=<sp/>shd_ut.first;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>p_sd<sp/>=<sp/>shd_ut.second;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jshd_unit[</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">]<sp/>=<sp/>sd_name;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jshd_unit[</highlight><highlight class="stringliteral">&quot;vs_name&quot;</highlight><highlight class="normal">]<sp/>=<sp/>p_sd-&gt;_vs_name;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jshd_unit[</highlight><highlight class="stringliteral">&quot;fs_name&quot;</highlight><highlight class="normal">]<sp/>=<sp/>p_sd-&gt;_fs_name;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jshd_unit[</highlight><highlight class="stringliteral">&quot;vs_code&quot;</highlight><highlight class="normal">]<sp/>=<sp/>p_sd-&gt;get_vs_code();</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jshd_unit[</highlight><highlight class="stringliteral">&quot;fs_code&quot;</highlight><highlight class="normal">]<sp/>=<sp/>p_sd-&gt;get_fs_code();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jshader.append(jshd_unit);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>jroot[</highlight><highlight class="stringliteral">&quot;shader_list&quot;</highlight><highlight class="normal">]<sp/>=<sp/>jshader;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>Value<sp/>jmaterial(arrayValue);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>mtl_ut<sp/>:<sp/><ref refid="material_8cpp_1a7ec3a5ea4800c713f34193465d7d5630" kindref="member">g_material_list</ref>)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Value<sp/>jmtl_ut(objectValue);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>pmtl<sp/>=<sp/>mtl_ut.second;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pmtl-&gt;output_2_json(jmtl_ut);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jmaterial.append(jmtl_ut);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>jroot[</highlight><highlight class="stringliteral">&quot;material_list&quot;</highlight><highlight class="normal">]<sp/>=<sp/>jmaterial;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classui__assembler_1a893b9a2797afc05c70d12ae9b4a597e8" kindref="member">_root</ref>.<ref refid="classbase__ui__component_1ab7335717106ea34851e0e80c268d49e3" kindref="member">init_json_unit</ref>(jroot);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/>jroot<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>fout.close();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/ui_assembler.cpp"/>
  </compounddef>
</doxygen>
