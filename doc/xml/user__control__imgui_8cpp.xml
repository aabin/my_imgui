<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9">
  <compounddef id="user__control__imgui_8cpp" kind="file" language="C++">
    <compoundname>user_control_imgui.cpp</compoundname>
    <includes refid="res__internal_8h" local="yes">res_internal.h</includes>
    <includes refid="user__control__imgui_8h" local="yes">user_control_imgui.h</includes>
    <incdepgraph>
      <node id="1278">
        <label>res_internal.h</label>
        <link refid="res__internal_8h"/>
        <childnode refid="1279" relation="include">
        </childnode>
        <childnode refid="1280" relation="include">
        </childnode>
      </node>
      <node id="1283">
        <label>imgui_internal.h</label>
      </node>
      <node id="1280">
        <label>string</label>
      </node>
      <node id="1279">
        <label>map</label>
      </node>
      <node id="1282">
        <label>imgui.h</label>
      </node>
      <node id="1281">
        <label>user_control_imgui.h</label>
        <link refid="user__control__imgui_8h"/>
        <childnode refid="1282" relation="include">
        </childnode>
        <childnode refid="1283" relation="include">
        </childnode>
      </node>
      <node id="1277">
        <label>G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/user_control_imgui.cpp</label>
        <link refid="user_control_imgui.cpp"/>
        <childnode refid="1278" relation="include">
        </childnode>
        <childnode refid="1281" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="user__control__imgui_8cpp_1aa638ce27e2e02d31079ac4d13107af25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool IconTreeNode</definition>
        <argsstring>(string &amp;icon_name, const char *label, ImGuiTreeNodeFlags flags)</argsstring>
        <name>IconTreeNode</name>
        <param>
          <type>string &amp;</type>
          <declname>icon_name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>label</declname>
        </param>
        <param>
          <type>ImGuiTreeNodeFlags</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/user_control_imgui.cpp" line="5" column="1" bodyfile="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/user_control_imgui.cpp" bodystart="5" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="user__control__imgui_8cpp_1a295a100769820351b1312ea9d2bd09a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool IconTreeNodeBehavior</definition>
        <argsstring>(ImGuiID id, ImGuiTreeNodeFlags flags, string &amp;icon_name, const char *label, const char *label_end)</argsstring>
        <name>IconTreeNodeBehavior</name>
        <param>
          <type>ImGuiID</type>
          <declname>id</declname>
        </param>
        <param>
          <type>ImGuiTreeNodeFlags</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>string &amp;</type>
          <declname>icon_name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>label</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>label_end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/user_control_imgui.cpp" line="16" column="1" bodyfile="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/user_control_imgui.cpp" bodystart="16" bodyend="187"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="res__internal_8h" kindref="compound">res_internal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="user__control__imgui_8h" kindref="compound">user_control_imgui.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="user__control__imgui_8cpp_1aa638ce27e2e02d31079ac4d13107af25" kindref="member">IconTreeNode</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>icon_name,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/><sp/>ImGuiTreeNodeFlags<sp/>flags)</highlight></codeline>
<codeline lineno="6"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiContext&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiWindow*<sp/>window<sp/>=<sp/>g.CurrentWindow;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window-&gt;SkipItems)</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="user__control__imgui_8cpp_1a295a100769820351b1312ea9d2bd09a2" kindref="member">IconTreeNodeBehavior</ref>(window-&gt;GetID(label),<sp/>flags,icon_name,label,<sp/>NULL);</highlight></codeline>
<codeline lineno="14"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="user__control__imgui_8cpp_1a295a100769820351b1312ea9d2bd09a2" kindref="member">IconTreeNodeBehavior</ref>(ImGuiID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>ImGuiTreeNodeFlags<sp/>flags,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>icon_name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label_end)</highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiContext&amp;<sp/>g<sp/>=<sp/>*GImGui;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiWindow*<sp/>window<sp/>=<sp/>g.CurrentWindow;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImGuiStyle&amp;<sp/>style<sp/>=<sp/>g.Style;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>display_frame<sp/>=<sp/>(flags<sp/>&amp;<sp/>ImGuiTreeNodeFlags_Framed)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImVec2<sp/>padding<sp/>=<sp/>(display_frame<sp/>||<sp/>(flags<sp/>&amp;<sp/>ImGuiTreeNodeFlags_FramePadding))<sp/>?<sp/>style.FramePadding<sp/>:<sp/>ImVec2(style.FramePadding.x,<sp/>0.0f);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!label_end)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>label_end<sp/>=<sp/>ImGui::FindRenderedTextEnd(label);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImVec2<sp/>label_size<sp/>=<sp/>ImGui::CalcTextSize(label,<sp/>label_end,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>vertically<sp/>grow<sp/>up<sp/>to<sp/>current<sp/>line<sp/>height<sp/>up<sp/>the<sp/>typical<sp/>widget<sp/>height.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>text_base_offset_y<sp/>=<sp/>ImMax(padding.y,<sp/>window-&gt;DC.CurrentLineTextBaseOffset);<sp/></highlight><highlight class="comment">//<sp/>Latch<sp/>before<sp/>ItemSize<sp/>changes<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>frame_height<sp/>=<sp/>ImMax(ImMin(window-&gt;DC.CurrentLineHeight,<sp/>g.FontSize<sp/>+<sp/>style.FramePadding.y<sp/>*<sp/>2),<sp/>label_size.y<sp/>+<sp/>padding.y<sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>ImRect<sp/>frame_bb<sp/>=<sp/>ImRect(window-&gt;DC.CursorPos,<sp/>ImVec2(window-&gt;Pos.x<sp/>+<sp/>ImGui::GetContentRegionMax().x,<sp/>window-&gt;DC.CursorPos.y<sp/>+<sp/>frame_height));</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(display_frame)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Framed<sp/>header<sp/>expand<sp/>a<sp/>little<sp/>outside<sp/>the<sp/>default<sp/>padding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frame_bb.Min.x<sp/>-=<sp/>(float)(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(window-&gt;WindowPadding.x*0.5f)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frame_bb.Max.x<sp/>+=<sp/>(float)(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(window-&gt;WindowPadding.x*0.5f)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>text_offset_x<sp/>=<sp/>(g.FontSize<sp/>+<sp/>(display_frame<sp/>?<sp/>padding.x<sp/>*<sp/>3<sp/>:<sp/>padding.x<sp/>*<sp/>2));<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Collapser<sp/>arrow<sp/>width<sp/>+<sp/>Spacing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>text_width<sp/>=<sp/>g.FontSize<sp/>+<sp/>(label_size.x<sp/>&gt;<sp/>0.0f<sp/>?<sp/>label_size.x<sp/>+<sp/>padding.x<sp/>*<sp/>2<sp/>:<sp/>0.0f);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Include<sp/>collapser</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui::ItemSize(ImVec2(text_width,<sp/>frame_height),<sp/>text_base_offset_y);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>regular<sp/>tree<sp/>nodes,<sp/>we<sp/>arbitrary<sp/>allow<sp/>to<sp/>click<sp/>past<sp/>2<sp/>worth<sp/>of<sp/>ItemSpacing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(Ideally<sp/>we&apos;d<sp/>want<sp/>to<sp/>add<sp/>a<sp/>flag<sp/>for<sp/>the<sp/>user<sp/>to<sp/>specify<sp/>if<sp/>we<sp/>want<sp/>the<sp/>hit<sp/>test<sp/>to<sp/>be<sp/>done<sp/>up<sp/>to<sp/>the<sp/>right<sp/>side<sp/>of<sp/>the<sp/>content<sp/>or<sp/>not)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImRect<sp/>interact_bb<sp/>=<sp/>display_frame<sp/>?<sp/>frame_bb<sp/>:<sp/>ImRect(frame_bb.Min.x,<sp/>frame_bb.Min.y,<sp/>frame_bb.Min.x<sp/>+<sp/>text_width<sp/>+<sp/>style.ItemSpacing.x<sp/>*<sp/>2,<sp/>frame_bb.Max.y);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_open<sp/>=<sp/>ImGui::TreeNodeBehaviorIsOpen(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>flags);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>a<sp/>flag<sp/>for<sp/>the<sp/>current<sp/>depth<sp/>to<sp/>tell<sp/>if<sp/>we<sp/>will<sp/>allow<sp/>closing<sp/>this<sp/>node<sp/>when<sp/>navigating<sp/>one<sp/>of<sp/>its<sp/>child.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>this<sp/>purpose<sp/>we<sp/>essentially<sp/>compare<sp/>if<sp/>g.NavIdIsAlive<sp/>went<sp/>from<sp/>0<sp/>to<sp/>1<sp/>between<sp/>TreeNode()<sp/>and<sp/>TreePop().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>currently<sp/>only<sp/>support<sp/>32<sp/>level<sp/>deep<sp/>and<sp/>we<sp/>are<sp/>fine<sp/>with<sp/>(1<sp/>&lt;&lt;<sp/>Depth)<sp/>overflowing<sp/>into<sp/>a<sp/>zero.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_open<sp/>&amp;&amp;<sp/>!g.NavIdIsAlive<sp/>&amp;&amp;<sp/>(flags<sp/>&amp;<sp/>ImGuiTreeNodeFlags_NavLeftJumpsBackHere)<sp/>&amp;&amp;<sp/>!(flags<sp/>&amp;<sp/>ImGuiTreeNodeFlags_NoTreePushOnOpen))</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;DC.TreeDepthMayJumpToParentOnPop<sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>window-&gt;DC.TreeDepth);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>item_add<sp/>=<sp/>ImGui::ItemAdd(interact_bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;DC.LastItemStatusFlags<sp/>|=<sp/>ImGuiItemStatusFlags_HasDisplayRect;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;DC.LastItemDisplayRect<sp/>=<sp/>frame_bb;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!item_add)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_open<sp/>&amp;&amp;<sp/>!(flags<sp/>&amp;<sp/>ImGuiTreeNodeFlags_NoTreePushOnOpen))</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui::TreePushRawID(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>is_open;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Flags<sp/>that<sp/>affects<sp/>opening<sp/>behavior:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>0(default)<sp/>.....................<sp/>single-click<sp/>anywhere<sp/>to<sp/>open</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>OpenOnDoubleClick<sp/>..............<sp/>double-click<sp/>anywhere<sp/>to<sp/>open</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>OpenOnArrow<sp/>....................<sp/>single-click<sp/>on<sp/>arrow<sp/>to<sp/>open</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>OpenOnDoubleClick|OpenOnArrow<sp/>..<sp/>single-click<sp/>on<sp/>arrow<sp/>or<sp/>double-click<sp/>anywhere<sp/>to<sp/>open</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGuiButtonFlags<sp/>button_flags<sp/>=<sp/>ImGuiButtonFlags_NoKeyModifiers<sp/>|<sp/>((flags<sp/>&amp;<sp/>ImGuiTreeNodeFlags_AllowItemOverlap)<sp/>?<sp/>ImGuiButtonFlags_AllowItemOverlap<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(flags<sp/>&amp;<sp/>ImGuiTreeNodeFlags_Leaf))</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>button_flags<sp/>|=<sp/>ImGuiButtonFlags_PressedOnDragDropHold;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>ImGuiTreeNodeFlags_OpenOnDoubleClick)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>button_flags<sp/>|=<sp/>ImGuiButtonFlags_PressedOnDoubleClick<sp/>|<sp/>((flags<sp/>&amp;<sp/>ImGuiTreeNodeFlags_OpenOnArrow)<sp/>?<sp/>ImGuiButtonFlags_PressedOnClickRelease<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hovered,<sp/>held,<sp/>pressed<sp/>=<sp/>ImGui::ButtonBehavior(interact_bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>&amp;hovered,<sp/>&amp;held,<sp/>button_flags);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(flags<sp/>&amp;<sp/>ImGuiTreeNodeFlags_Leaf))</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>toggled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pressed)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>toggled<sp/>=<sp/>!(flags<sp/>&amp;<sp/>(ImGuiTreeNodeFlags_OpenOnArrow<sp/>|<sp/>ImGuiTreeNodeFlags_OpenOnDoubleClick))<sp/>||<sp/>(g.NavActivateId<sp/>==<sp/>id);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>ImGuiTreeNodeFlags_OpenOnArrow)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>toggled<sp/>|=<sp/>ImGui::IsMouseHoveringRect(interact_bb.Min,<sp/>ImVec2(interact_bb.Min.x<sp/>+<sp/>text_offset_x,<sp/>interact_bb.Max.y))<sp/>&amp;&amp;<sp/>(!g.NavDisableMouseHover);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>ImGuiTreeNodeFlags_OpenOnDoubleClick)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>toggled<sp/>|=<sp/>g.IO.MouseDoubleClicked[0];</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.DragDropActive<sp/>&amp;&amp;<sp/>is_open)<sp/></highlight><highlight class="comment">//<sp/>When<sp/>using<sp/>Drag<sp/>and<sp/>Drop<sp/>&quot;hold<sp/>to<sp/>open&quot;<sp/>we<sp/>keep<sp/>the<sp/>node<sp/>highlighted<sp/>after<sp/>opening,<sp/>but<sp/>never<sp/>close<sp/>it<sp/>again.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>toggled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.NavId<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>g.NavMoveRequest<sp/>&amp;&amp;<sp/>g.NavMoveDir<sp/>==<sp/>ImGuiDir_Left<sp/>&amp;&amp;<sp/>is_open)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>toggled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui::NavMoveRequestCancel();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g.NavId<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>g.NavMoveRequest<sp/>&amp;&amp;<sp/>g.NavMoveDir<sp/>==<sp/>ImGuiDir_Right<sp/>&amp;&amp;<sp/>!is_open)<sp/></highlight><highlight class="comment">//<sp/>If<sp/>there&apos;s<sp/>something<sp/>upcoming<sp/>on<sp/>the<sp/>line<sp/>we<sp/>may<sp/>want<sp/>to<sp/>give<sp/>it<sp/>the<sp/>priority?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>toggled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui::NavMoveRequestCancel();</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(toggled)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_open<sp/>=<sp/>!is_open;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;DC.StateStorage-&gt;SetInt(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>is_open);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>ImGuiTreeNodeFlags_AllowItemOverlap)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui::SetItemAllowOverlap();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//icon<sp/>pos</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>ImVec2<sp/>icon_pos<sp/>=<sp/>frame_bb.Min;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>icon_pos.x<sp/>+=<sp/>20;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">nestfun</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImVec2&amp;<sp/>_basepos;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>_iconname;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&amp;<sp/>_txtxoffset;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImVec2<sp/>pos1,<sp/>pos2,<sp/>pos3,<sp/>pos4;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImVec2<sp/>uv1,<sp/>uv2,<sp/>uv3,<sp/>uv4;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>will_draw;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nestfun(ImVec2&amp;<sp/>bpos,</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;icname,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&amp;<sp/>txtxof)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:_basepos(bpos),<sp/>_iconname(icname),<sp/>_txtxoffset(txtxof),<sp/>will_draw(false)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>itxt_unit<sp/>=<sp/><ref refid="res__internal_8cpp_1a72171d9e9056bb7f89a0f481f8aa5bad" kindref="member">g_mtxt_intl</ref>.find(_iconname);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itxt_unit<sp/>!=<sp/><ref refid="res__internal_8cpp_1a72171d9e9056bb7f89a0f481f8aa5bad" kindref="member">g_mtxt_intl</ref>.end())</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>will_draw<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>txt_unit<sp/>=<sp/>itxt_unit-&gt;second;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>w<sp/>=<sp/>18.0f;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>h<sp/>=<sp/>18.0f;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos1<sp/>=<sp/>_basepos;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos2<sp/>=<sp/>{<sp/>pos1.x,<sp/>pos1.y<sp/>+<sp/>h<sp/>};</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos3<sp/>=<sp/>{<sp/>pos1.x<sp/>+<sp/>w,<sp/>pos2.y<sp/>};</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos4<sp/>=<sp/>{<sp/>pos3.x,<sp/>pos1.y<sp/>};</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uv1<sp/>=<sp/>ImVec2(txt_unit._x0<sp/>/<sp/><ref refid="res__internal_8cpp_1a601a2af241dce644855831962740bd15" kindref="member">g_txt_width_intl</ref>,<sp/>txt_unit._y0<sp/>/<sp/><ref refid="res__internal_8cpp_1a2e6ed982bb5cc9ee89cd3bb7e0c1fdda" kindref="member">g_txt_height_intl</ref>);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uv2<sp/>=<sp/>ImVec2(txt_unit._x0<sp/>/<sp/><ref refid="res__internal_8cpp_1a601a2af241dce644855831962740bd15" kindref="member">g_txt_width_intl</ref>,<sp/>(txt_unit._y1)<sp/>/<sp/><ref refid="res__internal_8cpp_1a2e6ed982bb5cc9ee89cd3bb7e0c1fdda" kindref="member">g_txt_height_intl</ref>);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uv3<sp/>=<sp/>ImVec2((txt_unit._x1)<sp/>/<sp/><ref refid="res__internal_8cpp_1a601a2af241dce644855831962740bd15" kindref="member">g_txt_width_intl</ref>,<sp/>(txt_unit._y1)<sp/>/<sp/><ref refid="res__internal_8cpp_1a2e6ed982bb5cc9ee89cd3bb7e0c1fdda" kindref="member">g_txt_height_intl</ref>);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uv4<sp/>=<sp/>ImVec2((txt_unit._x1)<sp/>/<sp/><ref refid="res__internal_8cpp_1a601a2af241dce644855831962740bd15" kindref="member">g_txt_width_intl</ref>,<sp/>(txt_unit._y0)<sp/>/<sp/><ref refid="res__internal_8cpp_1a2e6ed982bb5cc9ee89cd3bb7e0c1fdda" kindref="member">g_txt_height_intl</ref>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_txtxoffset<sp/>+=<sp/>w;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator()()</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(will_draw)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui::ImageQuad((ImTextureID)<ref refid="res__internal_8cpp_1aabb77b85bd2f86be209a77975f259b10" kindref="member">g_txt_id_intl</ref>,<sp/>pos1,<sp/>pos2,<sp/>pos3,<sp/>pos4,<sp/>uv1,<sp/>uv2,<sp/>uv3,<sp/>uv4);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>tmpfun(icon_pos,<sp/>icon_name,<sp/>text_offset_x);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Render</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImU32<sp/>col<sp/>=<sp/>ImGui::GetColorU32((held<sp/>&amp;&amp;<sp/>hovered)<sp/>?<sp/>ImGuiCol_HeaderActive<sp/>:<sp/>hovered<sp/>?<sp/>ImGuiCol_HeaderHovered<sp/>:<sp/>ImGuiCol_Header);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImVec2<sp/>text_pos<sp/>=<sp/>frame_bb.Min<sp/>+<sp/>ImVec2(text_offset_x,<sp/>text_base_offset_y);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>ImVec2<sp/>cursorpos=window-&gt;DC.CursorPos;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(display_frame)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Framed<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui::RenderFrame(frame_bb.Min,<sp/>frame_bb.Max,<sp/>col,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>style.FrameRounding);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui::RenderNavHighlight(frame_bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>ImGuiNavHighlightFlags_TypeThin);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui::RenderArrow(frame_bb.Min<sp/>+<sp/>ImVec2(padding.x,<sp/>text_base_offset_y),<sp/>is_open<sp/>?<sp/>ImGuiDir_Down<sp/>:<sp/>ImGuiDir_Right,<sp/>1.0f);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpfun();</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui::RenderTextClipped(text_pos,<sp/>frame_bb.Max,<sp/>label,<sp/>label_end,<sp/>&amp;label_size);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Unframed<sp/>typed<sp/>for<sp/>tree<sp/>nodes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hovered<sp/>||<sp/>(flags<sp/>&amp;<sp/>ImGuiTreeNodeFlags_Selected))</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui::RenderFrame(frame_bb.Min,<sp/>frame_bb.Max,<sp/>col,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui::RenderNavHighlight(frame_bb,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>ImGuiNavHighlightFlags_TypeThin);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>ImGuiTreeNodeFlags_Bullet)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui::RenderBullet(frame_bb.Min<sp/>+<sp/>ImVec2(text_offset_x<sp/>*<sp/>0.5f,<sp/>g.FontSize*0.50f<sp/>+<sp/>text_base_offset_y));</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(flags<sp/>&amp;<sp/>ImGuiTreeNodeFlags_Leaf))</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui::RenderArrow(frame_bb.Min<sp/>+<sp/>ImVec2(padding.x,<sp/>g.FontSize*0.15f<sp/>+<sp/>text_base_offset_y),<sp/>is_open<sp/>?<sp/>ImGuiDir_Down<sp/>:<sp/>ImGuiDir_Right,<sp/>0.70f);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpfun();</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui::RenderText(text_pos,<sp/>label,<sp/>label_end,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;DC.CursorPos<sp/>=<sp/>cursorpos;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;DC.CursorPos.y<sp/>+=<sp/>5;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_open<sp/>&amp;&amp;<sp/>!(flags<sp/>&amp;<sp/>ImGuiTreeNodeFlags_NoTreePushOnOpen))</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui::TreePushRawID(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>is_open;</highlight></codeline>
<codeline lineno="187"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="G:/GitHub/my_imgui/my_imgui/examples/auto_future_graphics_design/user_control_imgui.cpp"/>
  </compounddef>
</doxygen>
