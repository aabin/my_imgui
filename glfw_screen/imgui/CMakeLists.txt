link_libraries(glfw)
link_libraries(json_lib)
include_directories(${GLFW_SOURCE_DIR}/include)
include_directories(${GLFW_SOURCE_DIR}/boost_1_65_1)
include_directories(${GLFW_SOURCE_DIR}/imgui)
include_directories(${GLFW_SOURCE_DIR}/json)
include_directories(${GLFW_SOURCE_DIR})
include_directories(gl3w af_control fab  msgpack-c soil)
if(_GLFW_SCREEN)
if(QNX_VERSION EQUAL 660)
add_definitions(-DGLFW_INCLUDE_ES2)
add_definitions(-D_LIBCPP_VERSION)
else()
add_definitions(-DGLFW_INCLUDE_ES3)
endif()    
endif()
if(_GLFW_WAYLAND)
add_definitions(-DIMGUI_WAYLAND) 
endif()
add_definitions(-DIMGUI_DISABLE_DEMO_WINDOWS)

set(IMGUI imgui.cpp imgui_draw.cpp miniz.c)
file(GLOB AF_CONTROL af_control/*.cpp)
file(GLOB SOIL soil/*.c)
add_library(imgui_lib ${IMGUI} ${AF_CONTROL} ${SOIL})
set_target_properties(imgui_lib PROPERTIES LINKER_LANGUAGE CXX)
if(_GLFW_SCREEN)
target_link_libraries(imgui_lib EGL GLESv2 m screen)
else(_GLFW_WAYLAND)
target_link_libraries(imgui_lib wayland-client wayland-server wayland-cursor wayland-egl EGL GLESv2 m pthread dl)
endif()
#add_library(imgui_lib ${IMGUI} ${AF_CONTROL} ${SOIL} )
#set_target_properties(imgui_lib PROPERTIES LINKER_LANGUAGE CXX)
#target_link_libraries(imgui_lib wayland-client wayland-server wayland-cursor wayland-egl EGL GLESv2 m pthread dl)
